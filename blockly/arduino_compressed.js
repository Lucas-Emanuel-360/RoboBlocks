// Do not edit this file; automatically generated by build.py.
'use strict';

/*
 Licensed under the Apache License, Version 2.0 (the "License"):
          http://www.apache.org/licenses/LICENSE-2.0
*/
Blockly.Arduino=new Blockly.Generator("Arduino");Blockly.Arduino.StaticTyping=new Blockly.StaticTyping;Blockly.Arduino.addReservedWords("Blockly,setup,loop,if,else,for,switch,case,while,do,break,continue,return,goto,define,include,HIGH,LOW,INPUT,OUTPUT,INPUT_PULLUP,true,false,integer,constants,floating,point,void,boolean,char,unsigned,byte,int,word,long,float,double,string,String,array,static,volatile,const,sizeof,pinMode,digitalWrite,digitalRead,analogReference,analogRead,analogWrite,tone,noTone,shiftOut,shitIn,pulseIn,millis,micros,delay,delayMicroseconds,min,max,abs,constrain,map,pow,sqrt,sin,cos,tan,randomSeed,random,lowByte,highByte,bitRead,bitWrite,bitSet,bitClear,bit,attachInterrupt,detachInterrupt,interrupts,noInterrupts");
Blockly.Arduino.ORDER_ATOMIC=0;Blockly.Arduino.ORDER_UNARY_POSTFIX=1;Blockly.Arduino.ORDER_UNARY_PREFIX=2;Blockly.Arduino.ORDER_MULTIPLICATIVE=3;Blockly.Arduino.ORDER_ADDITIVE=4;Blockly.Arduino.ORDER_SHIFT=5;Blockly.Arduino.ORDER_RELATIONAL=6;Blockly.Arduino.ORDER_EQUALITY=7;Blockly.Arduino.ORDER_BITWISE_AND=8;Blockly.Arduino.ORDER_BITWISE_XOR=9;Blockly.Arduino.ORDER_BITWISE_OR=10;Blockly.Arduino.ORDER_LOGICAL_AND=11;Blockly.Arduino.ORDER_LOGICAL_OR=12;Blockly.Arduino.ORDER_CONDITIONAL=13;
Blockly.Arduino.ORDER_ASSIGNMENT=14;Blockly.Arduino.ORDER_NONE=99;Blockly.Arduino.PinTypes={INPUT:"INPUT",OUTPUT:"OUTPUT",PWM:"PWM",SERVO:"SERVO",STEPPER:"STEPPER",SERIAL:"SERIAL",I2C:"I2C/TWI",SPI:"SPI"};Blockly.Arduino.DEF_FUNC_NAME=Blockly.Arduino.FUNCTION_NAME_PLACEHOLDER_;
Blockly.Arduino.init=function(a){Blockly.Arduino.includes_=Object.create(null);Blockly.Arduino.definitions_=Object.create(null);Blockly.Arduino.variables_=Object.create(null);Blockly.Arduino.codeFunctions_=Object.create(null);Blockly.Arduino.userFunctions_=Object.create(null);Blockly.Arduino.functionNames_=Object.create(null);Blockly.Arduino.setups_=Object.create(null);Blockly.Arduino.pins_=Object.create(null);Blockly.Arduino.variableDB_?Blockly.Arduino.variableDB_.reset():Blockly.Arduino.variableDB_=
new Blockly.Names(Blockly.Arduino.RESERVED_WORDS_);var b=Blockly.Arduino.StaticTyping.collectVarsWithTypes(a);Blockly.Arduino.StaticTyping.setProcedureArgs(a,b);for(var c in b)Blockly.Arduino.addVariable(c,Blockly.Arduino.getArduinoType_(b[c])+" "+Blockly.Arduino.variableDB_.getName(c,Blockly.Variables.NAME_TYPE)+";")};
Blockly.Arduino.finish=function(a){var b=[],c=[],d=[],e=[],f;for(f in Blockly.Arduino.includes_)b.push(Blockly.Arduino.includes_[f]);b.length&&b.push("\n");for(f in Blockly.Arduino.variables_)d.push(Blockly.Arduino.variables_[f]);d.length&&d.push("\n");for(f in Blockly.Arduino.definitions_)c.push(Blockly.Arduino.definitions_[f]);c.length&&c.push("\n");for(f in Blockly.Arduino.codeFunctions_)e.push(Blockly.Arduino.codeFunctions_[f]);for(f in Blockly.Arduino.userFunctions_)e.push(Blockly.Arduino.userFunctions_[f]);
e.length&&e.push("\n");var g=[""],h="";void 0!==Blockly.Arduino.setups_.userSetupCode&&(h="\n"+Blockly.Arduino.setups_.userSetupCode,delete Blockly.Arduino.setups_.userSetupCode);for(f in Blockly.Arduino.setups_)g.push(Blockly.Arduino.setups_[f]);h&&g.push(h);delete Blockly.Arduino.includes_;delete Blockly.Arduino.definitions_;delete Blockly.Arduino.codeFunctions_;delete Blockly.Arduino.userFunctions_;delete Blockly.Arduino.functionNames_;delete Blockly.Arduino.setups_;delete Blockly.Arduino.pins_;
Blockly.Arduino.variableDB_.reset();b=b.join("\n")+d.join("\n")+c.join("\n")+e.join("\n\n");g="void setup() {"+g.join("\n  ")+"\n}\n\n";a="void loop() {\n  "+a.replace(/\n/g,"\n  ")+"\n}";return b+g+a};Blockly.Arduino.addInclude=function(a,b){void 0===Blockly.Arduino.includes_[a]&&(Blockly.Arduino.includes_[a]=b)};Blockly.Arduino.addDeclaration=function(a,b){void 0===Blockly.Arduino.definitions_[a]&&(Blockly.Arduino.definitions_[a]=b)};
Blockly.Arduino.addVariable=function(a,b,c){var d=!1;if(c||void 0===Blockly.Arduino.variables_[a])Blockly.Arduino.variables_[a]=b,d=!0;return d};Blockly.Arduino.addSetup=function(a,b,c){var d=!1;if(c||void 0===Blockly.Arduino.setups_[a])Blockly.Arduino.setups_[a]=b,d=!0;return d};
Blockly.Arduino.addFunction=function(a,b){if(void 0===Blockly.Arduino.codeFunctions_[a]){var c=Blockly.Arduino.variableDB_.getDistinctName(a,Blockly.Generator.NAME_TYPE);Blockly.Arduino.codeFunctions_[a]=b.replace(Blockly.Arduino.DEF_FUNC_NAME,c);Blockly.Arduino.functionNames_[a]=c}return Blockly.Arduino.functionNames_[a]};
Blockly.Arduino.reservePin=function(a,b,c,d){void 0!==Blockly.Arduino.pins_[b]?Blockly.Arduino.pins_[b]!=c?a.setWarningText(Blockly.Msg.ARD_PIN_WARN1.replace("%1",b).replace("%2",d).replace("%3",c).replace("%4",Blockly.Arduino.pins_[b]),d):a.setWarningText(null,d):(Blockly.Arduino.pins_[b]=c,a.setWarningText(null,d))};Blockly.Arduino.scrubNakedValue=function(a){return a+";\n"};
Blockly.Arduino.quote_=function(a){a=a.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/\$/g,"\\$").replace(/'/g,"\\'");return'"'+a+'"'};
Blockly.Arduino.scrub_=function(a,b){if(null===b)return"";var c="";if(!a.outputConnection||!a.outputConnection.targetConnection){var d=a.getCommentText();d&&(c+=this.prefixLines(d,"// ")+"\n");for(var e=0;e<a.inputList.length;e++)a.inputList[e].type==Blockly.INPUT_VALUE&&(d=a.inputList[e].connection.targetBlock())&&(d=this.allNestedComments(d))&&(c+=this.prefixLines(d,"// "))}e=a.nextConnection&&a.nextConnection.targetBlock();e=this.blockToCode(e);return c+b+e};
Blockly.Arduino.getArduinoType_=function(a){switch(a.typeId){case Blockly.Types.SHORT_NUMBER.typeId:return"char";case Blockly.Types.NUMBER.typeId:return"int";case Blockly.Types.LARGE_NUMBER.typeId:return"long";case Blockly.Types.DECIMAL.typeId:return"float";case Blockly.Types.TEXT.typeId:return"String";case Blockly.Types.CHARACTER.typeId:return"char";case Blockly.Types.BOOLEAN.typeId:return"boolean";case Blockly.Types.NULL.typeId:return"void";case Blockly.Types.UNDEF.typeId:return"undefined";case Blockly.Types.CHILD_BLOCK_MISSING.typeId:return"int";
default:return"Invalid Blockly Type"}};Blockly.Arduino.noGeneratorCodeInline=function(){return["",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.noGeneratorCodeLine=function(){return""};
// Copyright 2012 Google Inc.  Apache License 2.0
Blockly.Arduino.atuadores={};
var pinoLedVermelho=DB4K_pino_LED_vermelho,pinoLedAmarelo=DB4K_pino_LED_amarelo,pinoLedVerde=DB4K_pino_LED_verde,pinoLedAzul=DB4K_pino_LED_azul,velocidade_baixa_blink=DB4K_velocidade_baixa_blink,velocidade_media_blink=DB4K_velocidade_media_blink,velocidade_alta_blink=DB4K_velocidade_alta_blink,pino_rgb_vermelho=DB4K_pino_RGB_vermelho,pino_rgb_verde=DB4K_pino_RGB_verde,pino_rgb_azul=DB4K_pino_RGB_azul,pinoServoMotor=DB4K_pino_Servo_Motor,pinoMotorDC=DB4K_pino_MotorDC,velocidade_baixa_motorDC=DB4K_velocidade_baixa_motorDC,
velocidade_media_motorDC=DB4K_velocidade_media_motorDC,velocidade_alta_motorDC=DB4K_velocidade_alta_motorDC,nomeLCD="lcd",nomeSerial="Serial",velocidadeSerial=DB4K_velocidade_serial,pino_rs=DB4K_pino_rs,pino_rw=DB4K_pino_rw,pino_enable=DB4K_pino_enable,pino_dados_4=DB4K_pino_dados_4,pino_dados_5=DB4K_pino_dados_5,pino_dados_6=DB4K_pino_dados_6,pino_dados_7=DB4K_pino_dados_7,tamanho_linha_lcd=DB4K_tamanho_linha_LCD,numero_linhas_lcd="2",pino_segmento_F=DB4K_pino_segmento_F,pino_segmento_G=DB4K_pino_segmento_G,
pino_segmento_E=DB4K_pino_segmento_E,pino_segmento_D=DB4K_pino_segmento_D,pino_segmento_A=DB4K_pino_segmento_A,pino_segmento_B=DB4K_pino_segmento_B,pino_segmento_C=DB4K_pino_segmento_C,pino_ponto_decimal=DB4K_pino_ponto_decimal,pino_buzzer=DB4K_pino_buzzer,tempo_sirene=10;
Blockly.Arduino.acender_led=function(a){switch(a.getFieldValue("cor_led")){case "#ff0000":var b="pino_led_vermelho",c=pinoLedVermelho;Blockly.Arduino.definitions_.pino_led_vermelho="int pino_led_vermelho= "+pinoLedVermelho+";";break;case "#00ff00":b="pino_led_verde";c=pinoLedVerde;Blockly.Arduino.definitions_.pino_led_verde="int pino_led_verde= "+pinoLedVerde+";";break;case "#0000ff":b="pino_led_azul";c=pinoLedAzul;Blockly.Arduino.definitions_.pino_led_azul="int pino_led_azul= "+pinoLedAzul+";";break;
case "#ffff00":b="pino_led_amarelo",c=pinoLedAmarelo,Blockly.Arduino.definitions_.pino_led_amarelo="int pino_led_amarelo= "+pinoLedAmarelo+";"}Blockly.Arduino.reservePin(a,c,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);return"digitalWrite("+b+",HIGH);\n"};
Blockly.Arduino.apagar_led=function(a){switch(a.getFieldValue("cor_led")){case "#ff0000":var b="pino_led_vermelho",c=pinoLedVermelho;Blockly.Arduino.definitions_.pino_led_vermelho="int pino_led_vermelho= "+pinoLedVermelho+";";break;case "#00ff00":b="pino_led_verde";c=pinoLedVerde;Blockly.Arduino.definitions_.pino_led_verde="int pino_led_verde= "+pinoLedVerde+";";break;case "#0000ff":b="pino_led_azul";c=pinoLedAzul;Blockly.Arduino.definitions_.pino_led_azul="int pino_led_azul= "+pinoLedAzul+";";break;
case "#ffff00":b="pino_led_amarelo",c=pinoLedAmarelo,Blockly.Arduino.definitions_.pino_led_amarelo="int pino_led_amarelo= "+pinoLedAmarelo+";"}Blockly.Arduino.reservePin(a,c,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);return"digitalWrite("+b+",LOW);\n"};
Blockly.Arduino.piscar_led=function(a){var b=a.getFieldValue("cor_led"),c=a.getFieldValue("velocidade_blink");switch(b){case "#ff0000":var d="pino_led_vermelho",e=pinoLedVermelho;Blockly.Arduino.definitions_.pino_led_vermelho="int pino_led_vermelho= "+pinoLedVermelho+";";break;case "#00ff00":d="pino_led_verde";e=pinoLedVerde;Blockly.Arduino.definitions_.pino_led_verde="int pino_led_verde= "+pinoLedVerde+";";break;case "#0000ff":d="pino_led_azul";e=pinoLedAzul;Blockly.Arduino.definitions_.pino_led_azul=
"int pino_led_azul= "+pinoLedAzul+";";break;case "#ffff00":d="pino_led_amarelo",e=pinoLedAmarelo,Blockly.Arduino.definitions_.pino_led_amarelo="int pino_led_amarelo= "+pinoLedAmarelo+";"}switch(c){case "low":var f=velocidade_baixa_blink;break;case "middle":f=velocidade_media_blink;break;case "high":f=velocidade_alta_blink}b=f;Blockly.Arduino.reservePin(a,e,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+d,"pinMode("+d+", OUTPUT);",!1);return"digitalWrite("+d+",HIGH);\ndelay("+
b+");\ndigitalWrite("+d+",LOW);\ndelay("+b+");\n"};
Blockly.Arduino.girar_motor=function(a){var b=a.getFieldValue("velocidade_motor");Blockly.Arduino.definitions_.pino_motor_DC="int pino_motor_DC = "+pinoMotorDC+";";switch(b){case "low":var c=velocidade_baixa_motorDC;break;case "middle":c=velocidade_media_motorDC;break;case "high":c=velocidade_alta_motorDC}b=c;Blockly.Arduino.reservePin(a,pinoMotorDC,Blockly.Arduino.PinTypes.OUTPUT,"Analogue Write");Blockly.Arduino.addSetup("io_pino_motor_DC","pinMode(pino_motor_DC, OUTPUT);",!1);return"analogWrite(pino_motor_DC,"+
b+");\n"};Blockly.Arduino.parar_motor=function(a){Blockly.Arduino.definitions_.pino_motor_DC="int pino_motor_DC = "+pinoMotorDC+";";Blockly.Arduino.reservePin(a,pinoMotorDC,Blockly.Arduino.PinTypes.OUTPUT,"Analogue Write");Blockly.Arduino.addSetup("io_pino_motor_DC","pinMode(pino_motor_DC, OUTPUT);",!1);return"analogWrite(pino_motor_DC,0);\n"};
Blockly.Arduino.mover_servomotor=function(a){var b=a.getFieldValue("posicao_ponteiro_servo");Blockly.Arduino.definitions_.pino_servo_motor="int pino_servo_motor = "+pinoServoMotor+";";Blockly.Arduino.reservePin(a,pinoServoMotor,Blockly.Arduino.PinTypes.SERVO,"Servo Write");Blockly.Arduino.addInclude("servo","#include <Servo.h>");Blockly.Arduino.addDeclaration("servo_pino_servo_motor","Servo meu_Servo;");Blockly.Arduino.addSetup("servo_pino_servo_motor","meu_Servo.attach(pino_servo_motor);",!0);return"meu_Servo.write("+
b+");\n"};
Blockly.Arduino.escrever_lcd=function(a){var b=a.getFieldValue("texto"),c=a.getFieldValue("numero_linha");a=nomeLCD;switch(c){case "1":var d=a+".setCursor(0,0);\n";break;case "2":d=a+".setCursor(0,1);\n"}Blockly.Arduino.addInclude("lcd","#include <LiquidCrystal.h>");Blockly.Arduino.definitions_.lcd_pino_rs="int lcd_pino_rs = "+pino_rs+";";Blockly.Arduino.definitions_.lcd_pino_rw="int lcd_pino_rw = "+pino_rw+";";Blockly.Arduino.definitions_.lcd_pino_enable="int lcd_pino_enable = "+pino_enable+";";
Blockly.Arduino.definitions_.lcd_pino_dados_4="int lcd_pino_dados_4 = "+pino_dados_4+";";Blockly.Arduino.definitions_.lcd_pino_dados_5="int lcd_pino_dados_5 = "+pino_dados_5+";";Blockly.Arduino.definitions_.lcd_pino_dados_6="int lcd_pino_dados_6 = "+pino_dados_6+";";Blockly.Arduino.definitions_.lcd_pino_dados_7="int lcd_pino_dados_7 = "+pino_dados_7+";";Blockly.Arduino.addDeclaration("lcd","LiquidCrystal "+a+"(lcd_pino_rs,lcd_pino_rw,lcd_pino_enable,lcd_pino_dados_4,lcd_pino_dados_5,lcd_pino_dados_6,lcd_pino_dados_7);");
c=a+".begin("+tamanho_linha_lcd+","+numero_linhas_lcd+");";Blockly.Arduino.addSetup("lcd",nomeSerial+".begin("+velocidadeSerial+");",!0);Blockly.Arduino.addSetup("lcd",c,!0);return d+a+'.print("'+b+'");\n'};
Blockly.Arduino.limpar_lcd=function(a){a=nomeLCD;Blockly.Arduino.addInclude("lcd","#include <LiquidCrystal.h>");Blockly.Arduino.definitions_.lcd_pino_rs="int lcd_pino_rs = "+pino_rs+";";Blockly.Arduino.definitions_.lcd_pino_rw="int lcd_pino_rw = "+pino_rw+";";Blockly.Arduino.definitions_.lcd_pino_enable="int lcd_pino_enable = "+pino_enable+";";Blockly.Arduino.definitions_.lcd_pino_dados_4="int lcd_pino_dados_4 = "+pino_dados_4+";";Blockly.Arduino.definitions_.lcd_pino_dados_5="int lcd_pino_dados_5 = "+
pino_dados_5+";";Blockly.Arduino.definitions_.lcd_pino_dados_6="int lcd_pino_dados_6 = "+pino_dados_6+";";Blockly.Arduino.definitions_.lcd_pino_dados_7="int lcd_pino_dados_7 = "+pino_dados_7+";";Blockly.Arduino.addDeclaration("lcd","LiquidCrystal "+a+"(lcd_pino_rs,lcd_pino_rw,lcd_pino_enable,lcd_pino_dados_4,lcd_pino_dados_5,lcd_pino_dados_6,lcd_pino_dados_7);");var b=a+".begin("+tamanho_linha_lcd+","+numero_linhas_lcd+");";Blockly.Arduino.addSetup("lcd",nomeSerial+".begin("+velocidadeSerial+");",
!0);Blockly.Arduino.addSetup("lcd",b,!0);return a+".clear();\n"};
Blockly.Arduino.escrever_display_7s=function(a){switch(a.getFieldValue("numerosD7S")){case "0":var b="//Escreve 0 no display 7SEG",c="HIGH",d="LOW",e="HIGH",f="HIGH",g="HIGH",h="HIGH",k="HIGH",l="LOW";break;case "1":b="//Escreve 1 no display 7SEG";g=f=e=d=c="LOW";k=h="HIGH";l="LOW";break;case "2":b="//Escreve 2 no display 7SEG";c="LOW";h=g=f=e=d="HIGH";l=k="LOW";break;case "3":b="//Escreve 3 no display 7SEG";c="LOW";d="HIGH";e="LOW";k=h=g=f="HIGH";l="LOW";break;case "4":b="//Escreve 4 no display 7SEG";
d=c="HIGH";g=f=e="LOW";k=h="HIGH";l="LOW";break;case "5":b="//Escreve 5 no display 7SEG";d=c="HIGH";e="LOW";g=f="HIGH";h="LOW";k="HIGH";l="LOW";break;case "6":b="//Escreve 6 no display 7SEG";g=f=e=d=c="HIGH";h="LOW";k="HIGH";l="LOW";break;case "7":b="//Escreve 7 no display 7SEG";f=e=d=c="LOW";k=h=g="HIGH";l="LOW";break;case "8":b="//Escreve 8 no display 7SEG";k=h=g=f=e=d=c="HIGH";l="LOW";break;case "9":b="//Escreve 9 no display 7SEG",d=c="HIGH",e="LOW",k=h=g=f="HIGH",l="LOW"}Blockly.Arduino.definitions_.pino_segmento_A=
"int pino_segmento_A = "+pino_segmento_A+";";Blockly.Arduino.definitions_.pino_segmento_B="int pino_segmento_B = "+pino_segmento_B+";";Blockly.Arduino.definitions_.pino_segmento_C="int pino_segmento_C = "+pino_segmento_C+";";Blockly.Arduino.definitions_.pino_segmento_D="int pino_segmento_D = "+pino_segmento_D+";";Blockly.Arduino.definitions_.pino_segmento_E="int pino_segmento_E = "+pino_segmento_E+";";Blockly.Arduino.definitions_.pino_segmento_F="int pino_segmento_F = "+pino_segmento_F+";";Blockly.Arduino.definitions_.pino_segmento_G=
"int pino_segmento_G = "+pino_segmento_G+";";Blockly.Arduino.definitions_.pino_ponto_decimal="int pino_ponto_decimal = "+pino_ponto_decimal+";";Blockly.Arduino.reservePin(a,pino_segmento_F,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_G,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_E,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_D,Blockly.Arduino.PinTypes.OUTPUT,
"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_A,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_B,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_C,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_ponto_decimal,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+pino_segmento_F,"pinMode(pino_segmento_F, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+
pino_segmento_G,"pinMode(pino_segmento_G, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_E,"pinMode(pino_segmento_E, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_D,"pinMode(pino_segmento_D, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_A,"pinMode(pino_segmento_A, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_B,"pinMode(pino_segmento_B, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_C,"pinMode(pino_segmento_C, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+
pino_ponto_decimal,"pinMode(pino_ponto_decimal, OUTPUT);",!0);return b+"\ndigitalWrite(pino_segmento_F,"+c+");\ndigitalWrite(pino_segmento_G,"+d+");\ndigitalWrite(pino_segmento_E,"+e+");\ndigitalWrite(pino_segmento_D,"+f+");\ndigitalWrite(pino_segmento_A,"+g+");\ndigitalWrite(pino_segmento_B,"+h+");\ndigitalWrite(pino_segmento_C,"+k+");\ndigitalWrite(pino_ponto_decimal,"+l+");\n"};
Blockly.Arduino.limpar_display_7s=function(a){Blockly.Arduino.definitions_.pino_segmento_A="int pino_segmento_A = "+pino_segmento_A+";";Blockly.Arduino.definitions_.pino_segmento_B="int pino_segmento_B = "+pino_segmento_B+";";Blockly.Arduino.definitions_.pino_segmento_C="int pino_segmento_C = "+pino_segmento_C+";";Blockly.Arduino.definitions_.pino_segmento_D="int pino_segmento_D = "+pino_segmento_D+";";Blockly.Arduino.definitions_.pino_segmento_E="int pino_segmento_E = "+pino_segmento_E+";";Blockly.Arduino.definitions_.pino_segmento_F=
"int pino_segmento_F = "+pino_segmento_F+";";Blockly.Arduino.definitions_.pino_segmento_G="int pino_segmento_G = "+pino_segmento_G+";";Blockly.Arduino.definitions_.pino_ponto_decimal="int pino_ponto_decimal = "+pino_ponto_decimal+";";Blockly.Arduino.reservePin(a,pino_segmento_F,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_G,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_E,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");
Blockly.Arduino.reservePin(a,pino_segmento_D,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_A,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_B,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_segmento_C,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_ponto_decimal,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+
pino_segmento_F,"pinMode(pino_segmento_F, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_G,"pinMode(pino_segmento_G, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_E,"pinMode(pino_segmento_E, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_D,"pinMode(pino_segmento_D, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_A,"pinMode(pino_segmento_A, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_segmento_B,"pinMode(pino_segmento_B, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+
pino_segmento_C,"pinMode(pino_segmento_C, OUTPUT);",!0);Blockly.Arduino.addSetup("io_"+pino_ponto_decimal,"pinMode(pino_ponto_decimal, OUTPUT);",!0);return"//Apaga o Display de 7SEG\ndigitalWrite(pino_segmento_F,LOW);\ndigitalWrite(pino_segmento_G,LOW);\ndigitalWrite(pino_segmento_E,LOW);\ndigitalWrite(pino_segmento_D,LOW);\ndigitalWrite(pino_segmento_A,LOW);\ndigitalWrite(pino_segmento_B,LOW);\ndigitalWrite(pino_segmento_C,LOW);\ndigitalWrite(pino_ponto_decimal,LOW);\n"};
Blockly.Arduino.led_rgb=function(a){var b=a.getFieldValue("luzVermelha"),c=a.getFieldValue("luzVerde"),d=a.getFieldValue("luzAzul");switch(b){case "#ff0000":var e="255";break;case "#ffffff":e="0"}switch(c){case "#00ff00":var f="255";break;case "#ffffff":f="0"}switch(d){case "#0000ff":var g="255";break;case "#ffffff":g="0"}Blockly.Arduino.definitions_.pino_rgb_vermelho="int pino_rgb_vermelho = "+pino_rgb_vermelho+";";Blockly.Arduino.definitions_.pino_rgb_verde="int pino_rgb_verde = "+pino_rgb_verde+
";";Blockly.Arduino.definitions_.pino_rgb_azul="int pino_rgb_azul = "+pino_rgb_azul+";";Blockly.Arduino.reservePin(a,pino_rgb_vermelho,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_rgb_verde,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_rgb_azul,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_pino_rgb_vermelho","pinMode(pino_rgb_vermelho, OUTPUT);",!1);Blockly.Arduino.addSetup("io_pino_rgb_verde",
"pinMode(pino_rgb_verde, OUTPUT);",!1);Blockly.Arduino.addSetup("io_pino_rgb_azul","pinMode(pino_rgb_azul, OUTPUT);",!1);return"analogWrite(pino_rgb_vermelho,"+e+");\nanalogWrite(pino_rgb_verde,"+f+");\nanalogWrite(pino_rgb_azul,"+g+");\n"};
function Seleciona_frequencia_nota(a,b,c){var d=262;switch(b){case "3":switch(a){case "do":switch(c){case "b":d=123;break;case "n":d=131;break;case "s":d=139}break;case "re":switch(c){case "b":d=139;break;case "n":d=147;break;case "s":d=156}break;case "mi":switch(c){case "b":d=156;break;case "n":d=165;break;case "s":d=175}break;case "fa":switch(c){case "b":d=165;break;case "n":d=175;break;case "s":d=185}break;case "sol":switch(c){case "b":d=185;break;case "n":d=196;break;case "s":d=208}break;case "la":switch(c){case "b":d=
208;break;case "n":d=220;break;case "s":d=233}break;case "si":switch(c){case "b":d=233;break;case "n":d=247;break;case "s":d=262}}break;case "4":switch(a){case "do":switch(c){case "b":d=247;break;case "n":d=262;break;case "s":d=277}break;case "re":switch(c){case "b":d=277;break;case "n":d=294;break;case "s":d=311}break;case "mi":switch(c){case "b":d=311;break;case "n":d=330;break;case "s":d=349}break;case "fa":switch(c){case "b":d=330;break;case "n":d=349;break;case "s":d=370}break;case "sol":switch(c){case "b":d=
370;break;case "n":d=392;break;case "s":d=415}break;case "la":switch(c){case "b":d=415;break;case "n":d=440;break;case "s":d=466}break;case "si":switch(c){case "b":d=499;break;case "n":d=494;break;case "s":d=523}}break;case "5":switch(a){case "do":switch(c){case "b":d=494;break;case "n":d=523;break;case "s":d=554}break;case "re":switch(c){case "b":d=554;break;case "n":d=587;break;case "s":d=622}break;case "mi":switch(c){case "b":d=622;break;case "n":d=659;break;case "s":d=698}break;case "fa":switch(c){case "b":d=
659;break;case "n":d=698;break;case "s":d=740}break;case "sol":switch(c){case "b":d=740;break;case "n":d=784;break;case "s":d=831}break;case "la":switch(c){case "b":d=831;break;case "n":d=880;break;case "s":d=932}break;case "si":switch(c){case "b":d=932;break;case "n":d=988;break;case "s":d=1047}}}return d}
Blockly.Arduino.tocar_nota_buzzer=function(a){var b=a.getFieldValue("nota_musical"),c=a.getFieldValue("altura"),d=a.getFieldValue("acidente");Blockly.Arduino.definitions_.pino_buzzer="int pino_buzzer = "+pino_buzzer+";";Blockly.Arduino.reservePin(a,pino_buzzer,Blockly.Arduino.PinTypes.OUTPUT,"Analogue Write");Blockly.Arduino.addSetup("io_pino_buzzer","pinMode(pino_buzzer, OUTPUT);",!1);return"noTone(pino_buzzer);\ntone(pino_buzzer,"+Seleciona_frequencia_nota(b,c,d)+");\n"};
Blockly.Arduino.parar_som_buzzer=function(a){Blockly.Arduino.definitions_.pino_buzzer="int pino_buzzer = "+pino_buzzer+";";Blockly.Arduino.reservePin(a,pino_buzzer,Blockly.Arduino.PinTypes.OUTPUT,"Analogue Write");Blockly.Arduino.addSetup("io_pino_buzzer","pinMode(pino_buzzer, OUTPUT);",!1);return"noTone(pino_buzzer);\n"};
Blockly.Arduino.tocar_sirene_buzzer=function(a){var b=a.getFieldValue("velocidade");Blockly.Arduino.definitions_.pino_buzzer="int pino_buzzer = "+pino_buzzer+";";Blockly.Arduino.reservePin(a,pino_buzzer,Blockly.Arduino.PinTypes.OUTPUT,"Analogue Write");Blockly.Arduino.addSetup("io_pino_buzzer","pinMode(pino_buzzer, OUTPUT);",!1);return" for (int frequencia = 150; frequencia < 1800; frequencia += 1)\n {\n  tone(pino_buzzer, frequencia,"+tempo_sirene+");\n  delay("+b+");\n }\n for (int frequencia = 1800; frequencia > 150; frequencia -= 1)\n {\n  tone(pino_buzzer, frequencia,"+
tempo_sirene+");\n  delay("+b+");\n }\n"};Blockly.Arduino.Boards={};Blockly.Arduino.Boards.generateDigitalIo=function(a,b){for(var c=[],d=a;d<b+1;d++)c.push([d.toString(),d.toString()]);return c};Blockly.Arduino.Boards.generateAnalogIo=function(a,b){for(var c=[],d=a;d<b+1;d++)c.push(["A"+d.toString(),"A"+d.toString()]);return c};
Blockly.Arduino.Boards.duplicateBoardProfile=function(a,b,c,d){return{name:b,description:c||a.description,compilerFlag:d||a.compilerFlag,analogPins:a.analogPins,digitalPins:a.digitalPins,pwmPins:a.pwmPins,serial:a.serial,serialPins:a.serialPins,serialSpeed:a.serialSpeed,spi:a.spi,spiPins:a.spiPins,spiClockDivide:a.spiClockDivide,i2c:a.i2c,i2cPins:a.i2cPins,i2cSpeed:a.i2cSpeed,builtinLed:a.builtinLed,interrupt:a.interrupt}};Blockly.Arduino.Boards.profiles={};
Blockly.Arduino.Boards.profiles.uno={name:"Arduino Uno",description:"Arduino Uno standard compatible board",compilerFlag:"arduino:avr:uno",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,5),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,5)),pwmPins:[["3","3"],["5","5"],["6","6"],["9","9"],["10","10"],["11","11"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","0"],["TX","1"]]},serialSpeed:[["300","300"],["600","600"],["1200",
"1200"],["2400","2400"],["4800","4800"],["9600","9600"],["14400","14400"],["19200","19200"],["28800","28800"],["31250","31250"],["38400","38400"],["57600","57600"],["115200","115200"]],spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","11"],["MISO","12"],["SCK","13"]]},spiClockDivide:[["2 (8MHz)","SPI_CLOCK_DIV2"],["4 (4MHz)","SPI_CLOCK_DIV4"],["8 (2MHz)","SPI_CLOCK_DIV8"],["16 (1MHz)","SPI_CLOCK_DIV16"],["32 (500KHz)","SPI_CLOCK_DIV32"],["64 (250KHz)","SPI_CLOCK_DIV64"],["128 (125KHz)","SPI_CLOCK_DIV128"]],
i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","A4"],["SCL","A5"]]},i2cSpeed:[["100kHz","100000L"],["400kHz","400000L"]],builtinLed:[["BUILTIN_1","13"]],interrupt:[["interrupt0","2"],["interrupt1","3"]]};
Blockly.Arduino.Boards.profiles.nano_328={name:"Arduino Nano 328",description:"Arduino Nano with ATmega328 board",compilerFlag:"arduino:avr:nano:cpu=atmega328",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,7),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,7)),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt};
Blockly.Arduino.Boards.profiles.nano_168=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.nano_328,"Arduino Nano 168","Arduino Nano with ATmega168 compatible board","arduino:avr:nano:cpu=atmega168");
Blockly.Arduino.Boards.profiles.duemilanove_168p={name:"Arduino Nano 168p",description:"Arduino Duemilanove with ATmega168p compatible board",compilerFlag:"arduino:avr:diecimila:cpu=atmega168",analogPins:Blockly.Arduino.Boards.profiles.uno.analogPins,digitalPins:Blockly.Arduino.Boards.profiles.uno.digitalPins,pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt};
Blockly.Arduino.Boards.profiles.duemilanove_328p=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.duemilanove_168p,"Arduino Duemilanove 328p","Arduino Duemilanove with ATmega328p compatible board","arduino:avr:diecimila");
Blockly.Arduino.Boards.profiles.mega={name:"Arduino Mega",description:"Arduino Mega-compatible board",compilerFlag:"arduino:avr:mega",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,15),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,53),pwmPins:Blockly.Arduino.Boards.generateDigitalIo(2,13).concat(Blockly.Arduino.Boards.generateDigitalIo(44,46)),serial:[["serial","Serial"],["serial_1","Serial1"],["serial_2","Serial2"],["serial_3","Serial3"]],serialPins:{Serial:[["TX","0"],["RX","1"]],
Serial1:[["TX","18"],["TX","19"]],Serial2:[["TX","16"],["TX","17"]],Serial3:[["TX","14"],["TX","15"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","51"],["MISO","50"],["SCK","52"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","20"],["SCL","21"]]},i2cSpeed:[["100kHz","100000L"],["400kHz","400000L"]],builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:[["interrupt0",
"2"],["interrupt1","3"],["interrupt2","21"],["interrupt3","20"],["interrupt4","19"],["interrupt5","18"]]};
Blockly.Arduino.Boards.profiles.leonardo={name:"Arduino Leonardo",description:"Arduino Leonardo-compatible board",compilerFlag:"arduino:avr:leonardo",analogPins:Blockly.Arduino.Boards.generateAnalogIo(0,5).concat([["A6","4"],["A7","6"],["A8","8"],["A9","9"],["A10","10"],["A11","12"]]),digitalPins:Blockly.Arduino.Boards.generateDigitalIo(0,13).concat(Blockly.Arduino.Boards.generateAnalogIo(0,5)),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins.concat([["13","13"]]),serial:Blockly.Arduino.Boards.profiles.uno.serial,
serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","ICSP-4"],["MISO","ICSP-1"],["SCK","ICSP-3"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","2"],["SCL","3"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:Blockly.Arduino.Boards.profiles.uno.builtinLed,interrupt:[["interrupt0","3"],["interrupt1","2"],["interrupt2",
"0"],["interrupt3","1"],["interrupt4","17"]]};Blockly.Arduino.Boards.profiles.yun=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.leonardo,"Arduino Yun","Arduino Yun compatible board");
Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini={name:"Atmel atmega328p Xplained mini",description:"Atmel Xplained mini board with atmega328p (Uno compatible)",compilerFlag:"atmel:avr:atmega328p_xplained_mini",analogPins:Blockly.Arduino.Boards.profiles.uno.analogPins,digitalPins:Blockly.Arduino.Boards.profiles.uno.digitalPins.concat([["20","20"]]),pwmPins:Blockly.Arduino.Boards.profiles.uno.pwmPins,serial:Blockly.Arduino.Boards.profiles.uno.serial,serialPins:Blockly.Arduino.Boards.profiles.uno.serialPins,
serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,spi:Blockly.Arduino.Boards.profiles.uno.spi,spiPins:Blockly.Arduino.Boards.profiles.uno.spiPins,spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:Blockly.Arduino.Boards.profiles.uno.i2c,i2cPins:Blockly.Arduino.Boards.profiles.uno.i2cPins,i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_LED","13"]],interrupt:Blockly.Arduino.Boards.profiles.uno.interrupt,builtinButton:[["BUILTIN_BUTTON","20"]]};
Blockly.Arduino.Boards.profiles.atmel_atmega328pb_xplained_mini=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini,"Atmel atmega328pb Xplained mini","Atmel Xplained mini board with atmega328pb (Arduino Uno compatible)","atmel:avr:atmega328pb_xplained_mini");
Blockly.Arduino.Boards.profiles.atmel_atmega168pb_xplained_mini=Blockly.Arduino.Boards.duplicateBoardProfile(Blockly.Arduino.Boards.profiles.atmel_atmega328p_xplained_mini,"Atmel atmega168pb Xplained mini","Atmel Xplained mini board with atmega168pb (Arduino Uno compatible)","atmel:avr:atmega168pb_xplained_mini");
Blockly.Arduino.Boards.profiles.esp8266_huzzah={name:"Adafruit Feather HUZZAH",description:"Adafruit HUZZAH ESP8266 compatible board",compilerFlag:"esp8266:esp8266:generic",analogPins:[["A0","A0"]],digitalPins:[["0","0"],["2","2"],["4","4"],["5","5"],["12","12"],["13","13"],["14","14"],["15","15"],["16","16"]],pwmPins:[["2","2"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","RX"],["TX","TX"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serial,spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI",
"13"],["MISO","12"],["SCK","14"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","4"],["SCL","5"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_1","0"]],interrupt:[["interrupt0","2"],["interrupt1","3"]]};
Blockly.Arduino.Boards.profiles.esp8266_wemos_d1={name:"Wemos D1",description:"Wemos D1 R2 compatible board",compilerFlag:"esp8266:esp8266:generic",analogPins:[["A0","A0"]],digitalPins:[["D0","D0"],["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]],pwmPins:[["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]],serial:[["serial","Serial"]],serialPins:{Serial:[["RX","RX"],["TX","TX"]]},serialSpeed:Blockly.Arduino.Boards.profiles.uno.serialSpeed,
spi:[["SPI","SPI"]],spiPins:{SPI:[["MOSI","D7"],["MISO","D6"],["SCK","D5"]]},spiClockDivide:Blockly.Arduino.Boards.profiles.uno.spiClockDivide,i2c:[["I2C","Wire"]],i2cPins:{Wire:[["SDA","D2"],["SCL","D1"]]},i2cSpeed:Blockly.Arduino.Boards.profiles.uno.i2cSpeed,builtinLed:[["BUILTIN_1","D4"]],interrupt:[["D0","D0"],["D1","D1"],["D2","D2"],["D3","D3"],["D4","D4"],["D5","D5"],["D6","D7"],["D8","D8"]]};Blockly.Arduino.Boards.selected=Blockly.Arduino.Boards.profiles.uno;
Blockly.Arduino.Boards.changeBoard=function(a,b){if(void 0===Blockly.Arduino.Boards.profiles[b])console.log("Tried to set non-existing Arduino board: "+b);else{Blockly.Arduino.Boards.selected=Blockly.Arduino.Boards.profiles[b];for(var c=a.getAllBlocks(),d=0;d<c.length;d++){var e=c[d].updateFields;e&&e.call(c[d])}}};
Blockly.Arduino.Boards.refreshBlockFieldDropdown=function(a,b,c){var d=a.getField(b);b=d.getValue();c=Blockly.Arduino.Boards.selected[c];d.menuGenerator_=c;d=!1;for(var e=0;e<c.length;e++)b==c[e][1]&&(d=!0);d?a.setWarningText(null,"bPin"):a.setWarningText("The old pin value "+b+" is no longer available.","bPin")};Blockly.Arduino.braco={};
var pino_servo_base_braco=DB4K_pino_servo_base_braco,pino_servo_garra_braco=DB4K_pino_servo_garra_braco,pino_servo_direita_braco=DB4K_pino_servo_direita_braco,pino_servo_esquerda_braco=DB4K_pino_servo_esquerda_braco,min_servo_direita=DB4K_min_servo_direita,max_servo_direita=DB4K_max_servo_direita,min_servo_esquerda=DB4K_min_servo_esquerda,max_servo_esquerda=DB4K_max_servo_esquerda,min_servo_base=DB4K_min_servo_base,meio_servo_base=DB4K_meio_servo_base,max_servo_base=DB4K_max_servo_base,min_servo_garra=
DB4K_min_servo_garra,max_servo_garra=DB4K_max_servo_garra,ext_servo_dir_pega_objeto=DB4K_ext_servo_dir_pega_objeto,ext_servo_esq_pega_objeto=DB4K_ext_servo_esq_pega_objeto,ext_servo_dir_solta_objeto=DB4K_ext_servo_dir_solta_objeto,ext_servo_esq_solta_objeto=DB4K_ext_servo_esq_solta_objeto,delay_movimento=DB4K_delay_movimento;function inclui_servo(){Blockly.Arduino.addInclude("servo","#include <Servo.h>")}
function declara_servos_braco(){Blockly.Arduino.addDeclaration("servo_base_braco","Servo servo_base;");Blockly.Arduino.addDeclaration("servo_garra_braco","Servo servo_garra;");Blockly.Arduino.addDeclaration("servo_direita_braco","Servo servo_direita;");Blockly.Arduino.addDeclaration("servo_esquerda_braco","Servo servo_esquerda;")}
function reserva_pinos_braco(a){Blockly.Arduino.reservePin(a,pino_servo_base_braco,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_servo_garra_braco,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_servo_direita_braco,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_servo_esquerda_braco,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write")}
function declara_variaveis_pinos_braco(){Blockly.Arduino.definitions_.pino_servo_base_braco="int pino_servo_base_braco= "+pino_servo_base_braco+";";Blockly.Arduino.definitions_.pino_servo_garra_braco="int pino_servo_garra_braco= "+pino_servo_garra_braco+";";Blockly.Arduino.definitions_.pino_servo_direita_braco="int pino_servo_direita_braco= "+pino_servo_direita_braco+";";Blockly.Arduino.definitions_.pino_servo_esquerda_braco="int pino_servo_esquerda_braco= "+pino_servo_esquerda_braco+";"}
function define_codigo_funcao_setup_braco(){declara_variaveis_pinos_braco();Blockly.Arduino.addSetup("servo_base_braco","servo_base.attach(pino_servo_base_braco);",!0);Blockly.Arduino.addSetup("servo_garra_braco","servo_garra.attach(pino_servo_garra_braco);",!0);Blockly.Arduino.addSetup("servo_direita_braco","servo_direita.attach(pino_servo_direita_braco);",!0);Blockly.Arduino.addSetup("servo_esquerda_braco","servo_esquerda.attach(pino_servo_esquerda_braco);",!0)}
function declara_variaveis_globais_braco(){Blockly.Arduino.definitions_.pos_atual_servo_base="int pos_atual_servo_base;";Blockly.Arduino.definitions_.pos_atual_servo_garra="int pos_atual_servo_garra;";Blockly.Arduino.definitions_.pos_atual_servo_direita="int pos_atual_servo_direita;";Blockly.Arduino.definitions_.pos_atual_servo_esquerda="int pos_atual_servo_esquerda;";Blockly.Arduino.definitions_.min_servo_direita="int min_servo_direita= "+min_servo_direita+";";Blockly.Arduino.definitions_.max_servo_direita=
"int max_servo_direita= "+max_servo_direita+";";Blockly.Arduino.definitions_.min_servo_esquerda="int min_servo_esquerda= "+min_servo_esquerda+";";Blockly.Arduino.definitions_.max_servo_esquerda="int max_servo_esquerda= "+max_servo_esquerda+";";Blockly.Arduino.definitions_.min_servo_base="int min_servo_base= "+min_servo_base+";";Blockly.Arduino.definitions_.meio_servo_base="int meio_servo_base= "+meio_servo_base+";";Blockly.Arduino.definitions_.max_servo_base="int max_servo_base= "+max_servo_base+
";";Blockly.Arduino.definitions_.min_servo_garra="int min_servo_garra= "+min_servo_garra+";";Blockly.Arduino.definitions_.max_servo_garra="int max_servo_garra= "+max_servo_garra+";";Blockly.Arduino.definitions_["ext_servo_dir_pega_objeto "]="int ext_servo_dir_pega_objeto = "+ext_servo_dir_pega_objeto+";";Blockly.Arduino.definitions_["ext_servo_esq_pega_objeto "]="int ext_servo_esq_pega_objeto = "+ext_servo_esq_pega_objeto+";";Blockly.Arduino.definitions_.ext_servo_dir_solta_objeto="int ext_servo_dir_solta_objeto ="+
ext_servo_dir_solta_objeto+";";Blockly.Arduino.definitions_.ext_servo_esq_solta_objeto="int ext_servo_esq_solta_objeto ="+ext_servo_esq_solta_objeto+";";Blockly.Arduino.definitions_.delay_movimento="int delay_movimento ="+delay_movimento+";"}
function codigo_inicializa_braco(){return" servo_base.write(meio_servo_base);\n pos_atual_servo_base = servo_base.read();\n servo_direita.write(min_servo_direita);\n pos_atual_servo_direita = servo_direita.read();\n servo_esquerda.write(min_servo_esquerda);\n pos_atual_servo_esquerda = servo_esquerda.read();\n servo_garra.write(min_servo_garra);\n pos_atual_servo_garra = servo_garra.read();\n"}
function codigo_retorna_posicao_inicial_servo_esquerda(){return" int K;\n int pos = pos_atual_servo_esquerda;\n for ( K = pos; K >= min_servo_esquerda ; K = K - 1)\n {\n  servo_esquerda.write(K);\n  pos_atual_servo_esquerda = servo_esquerda.read();\n  delay (delay_movimento/2);\n }\n"}
function codigo_retorna_posicao_inicial_servo_direita(){return" int K;\n int pos = pos_atual_servo_direita;\n for ( K = pos; K >= min_servo_direita ; K = K - 1)\n {\n  servo_direita.write(K);\n  pos_atual_servo_direita = servo_direita.read();\n  delay (delay_movimento/2);\n }\n"}
function codigo_abre_garra(){return" int K;\n int pos = pos_atual_servo_garra;\n for ( K = pos; K >= min_servo_garra ; K = K - 1)\n {\n  servo_garra.write(K);\n  pos_atual_servo_garra = servo_garra.read();\n  delay (delay_movimento);\n }\n"}function codigo_fecha_garra(){return" int K;\n int pos =  pos_atual_servo_garra;\n for ( K = pos; K <= max_servo_garra ; K = K + 1)\n { \n   servo_garra.write(K);\n   pos_atual_servo_garra = servo_garra.read();\n   delay (delay_movimento); \n }\n"}
function codigo_baixa_braco_sem_objeto(){return" int maximo =  ext_servo_dir_pega_objeto ;\n int pos_direita;\n int pos;\n int K;\n pos = pos_atual_servo_esquerda;\n for ( K = pos; K >= min_servo_esquerda ; K = K - 1)\n { \n  servo_esquerda.write(K);\n  pos_atual_servo_esquerda = servo_esquerda.read();\n  delay (delay_movimento);\n }\n pos_direita = pos_atual_servo_direita;\n pos = pos_direita;\n for ( K = pos; K < maximo ; K = K + 1)\n {\n  if (pos_atual_servo_direita < maximo)\n  {\n      pos_direita = pos_direita + 1;\n      servo_direita.write(pos_direita);\n      pos_atual_servo_direita = servo_direita.read();\n  }\n  delay (delay_movimento);\n }\n pos =  pos_atual_servo_esquerda;\n for ( K = pos; K < ext_servo_esq_pega_objeto; K = K + 1)\n {\n  if (pos_atual_servo_esquerda < max_servo_esquerda)\n  {\n      servo_esquerda.write(pos_atual_servo_esquerda + 1);\n      pos_atual_servo_esquerda = servo_esquerda.read();\n      delay (delay_movimento);\n  }\n }\n"}
function codigo_levanta_braco_com_objeto(){return" int minimo;\n int pos_direita = pos_atual_servo_direita;\n int pos_esquerda = pos_atual_servo_esquerda;\n bool nao_levantou = true;\n while (nao_levantou)\n {\n    if (pos_direita > min_servo_direita)\n    {\n      pos_direita = pos_direita - 1;\n      servo_direita.write(pos_direita);\n      pos_atual_servo_direita = servo_direita.read();\n    }\n    if (pos_esquerda < max_servo_esquerda)\n    {\n      pos_esquerda = pos_esquerda + 1;\n      servo_esquerda.write(pos_esquerda);\n      pos_atual_servo_esquerda = servo_esquerda.read();\n    }\n    if ((pos_esquerda >= max_servo_esquerda)&&( pos_direita <= min_servo_direita))\n    {\n      nao_levantou = false;\n    }\n  delay (delay_movimento);\n }\n"}
function codigo_baixa_braco_com_objeto(){return" int pos;\n int K;\n pos = pos_atual_servo_direita;\n for ( K = pos; K <= ext_servo_dir_solta_objeto ; K = K + 1)\n {\n  servo_direita.write(K);\n  pos_atual_servo_direita = servo_direita.read();\n  delay (delay_movimento);\n }\n pos = pos_atual_servo_esquerda;\n for ( K = pos; K >= ext_servo_esq_solta_objeto ; K = K - 1)\n {\n  servo_esquerda.write(K);\n  pos_atual_servo_esquerda = servo_esquerda.read();\n  delay (delay_movimento);\n }\n"}
function codigo_retorna_braco_sem_objeto(){return" int pos;\n int K;\n pos = pos_atual_servo_esquerda;\n for ( K = pos; K >= min_servo_esquerda ; K = K - 1)\n {\n  servo_esquerda.write(K);\n  pos_atual_servo_esquerda = servo_esquerda.read();\n  delay (delay_movimento);\n }\n pos = pos_atual_servo_direita;\n for ( K = pos; K >= min_servo_direita ; K = K - 1)\n {\n  servo_direita.write(K);\n  pos_atual_servo_direita = servo_direita.read();\n  delay (delay_movimento);\n }\n"}
function codigo_direita(){return" int K;\n int pos = pos_atual_servo_base;\n for ( K = pos; K >= min_servo_base ; K = K - 1)\n {\n  servo_base.write(K);\n  pos_atual_servo_base = servo_base.read();\n  delay (delay_movimento);\n }\n"}function codigo_esquerda(){return" int K;\n int pos = pos_atual_servo_base;\n for ( K = pos; K <= max_servo_base; K = K + 1)\n {\n  servo_base.write(K);\n  pos_atual_servo_base = servo_base.read();\n  delay (delay_movimento);\n }\n"}
function codigo_centro(){return" int K;\n int pos = pos_atual_servo_base;\n if (pos > meio_servo_base)\n {\n  for ( K = pos; K >= 80 ; K = K - 1)\n   {\n    servo_base.write(K);\n    pos_atual_servo_base = servo_base.read();\n    delay (delay_movimento);\n   }\n    pos = pos_atual_servo_base;\n    for ( K = pos; K <= meio_servo_base ; K = K + 1)\n   {\n    servo_base.write(K);\n    pos_atual_servo_base = servo_base.read();\n    delay (delay_movimento);\n   }\n }else\n {\n  for ( K = pos; K <= meio_servo_base ; K = K + 1)\n   {\n    servo_base.write(K);\n    pos_atual_servo_base = servo_base.read();\n    delay (delay_movimento);\n   }\n }\n"}
Blockly.Arduino.pegar_objeto=function(a){var b=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_baixa_braco_sem_objeto()+"}\n"],c=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_fecha_garra()+"}\n"],d=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_levanta_braco_com_objeto()+"}\n"];b=Blockly.Arduino.addFunction("baixa_braco_sem_objeto",b.join("\n"));c=Blockly.Arduino.addFunction("fecha_garra",c.join("\n"));d=Blockly.Arduino.addFunction("levanta_braco_com_objeto",d.join("\n"));
inclui_servo();declara_servos_braco();reserva_pinos_braco(a);define_codigo_funcao_setup_braco();declara_variaveis_globais_braco();return b+"();\n"+c+"();\n"+d+"();\n"};
Blockly.Arduino.soltar_objeto=function(a){var b=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_levanta_braco_com_objeto()+"}\n"],c=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_baixa_braco_com_objeto()+"}\n"],d=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_abre_garra()+"}\n"],e=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_retorna_braco_sem_objeto()+"}\n"];b=Blockly.Arduino.addFunction("levanta_braco_com_objeto",b.join("\n"));c=Blockly.Arduino.addFunction("baixa_braco_com_objeto",
c.join("\n"));d=Blockly.Arduino.addFunction("abre_garra",d.join("\n"));e=Blockly.Arduino.addFunction("retorna_braco_sem_objeto",e.join("\n"));inclui_servo();declara_servos_braco();reserva_pinos_braco(a);define_codigo_funcao_setup_braco();declara_variaveis_globais_braco();return b+"();\n"+c+"();\n"+d+"();\n"+e+"();\n"};
Blockly.Arduino.girar_braco_robotico_direita=function(a){var b=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_direita()+"}\n"];b=Blockly.Arduino.addFunction("direita",b.join("\n"));inclui_servo();declara_servos_braco();reserva_pinos_braco(a);define_codigo_funcao_setup_braco();declara_variaveis_globais_braco();return b+"();\n"};
Blockly.Arduino.girar_braco_robotico_esquerda=function(a){var b=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_esquerda()+"}\n"];b=Blockly.Arduino.addFunction("esquerda",b.join("\n"));inclui_servo();declara_servos_braco();reserva_pinos_braco(a);define_codigo_funcao_setup_braco();declara_variaveis_globais_braco();return b+"();\n"};
Blockly.Arduino.centralizar_braco_robotico=function(a){var b=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_centro()+"}\n"];b=Blockly.Arduino.addFunction("centro",b.join("\n"));inclui_servo();declara_servos_braco();reserva_pinos_braco(a);define_codigo_funcao_setup_braco();declara_variaveis_globais_braco();return b+"();\n"};Blockly.Arduino.finalizar_braco=function(a){return"while (true);\n"};
Blockly.Arduino.inicializar_braco=function(a){var b=["void "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_inicializa_braco()+"}\n"];b=Blockly.Arduino.addFunction("inicializa_braco",b.join("\n"));inclui_servo();declara_servos_braco();reserva_pinos_braco(a);define_codigo_funcao_setup_braco();declara_variaveis_globais_braco();return b+"();\n"};Blockly.Arduino.carrinho={};var pino_motor_esquerdo_IN3=DB4K_pino_motor_esquerdo_IN3,pino_motor_esquerdo_IN4=DB4K_pino_motor_esquerdo_IN4,pino_enable_motor_esquerdo=DB4K_pino_enable_motor_esquerdo,pino_motor_direito_IN1=DB4K_pino_motor_direito_IN1,pino_motor_direito_IN2=DB4K_pino_motor_direito_IN2,pino_enable_motor_direito=DB4K_pino_enable_motor_direito,velocidade_motor_esquerdo=DB4K_velocidade_motor_esquerdo,velocidade_motor_direito=DB4K_velocidade_motor_direito;
function reserva_pinos_carrinho(a){Blockly.Arduino.reservePin(a,pino_motor_esquerdo_IN3,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_motor_esquerdo_IN4,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_motor_direito_IN1,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_motor_direito_IN2,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.reservePin(a,pino_enable_motor_esquerdo,Blockly.Arduino.PinTypes.OUTPUT,
"Digital Write");Blockly.Arduino.reservePin(a,pino_enable_motor_direito,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write")}
function declara_variaveis_pinos_carrinho(){Blockly.Arduino.definitions_.pino_motor_esquerdo_IN3="int pino_motor_esquerdo_IN3= "+pino_motor_esquerdo_IN3+";";Blockly.Arduino.definitions_.pino_motor_esquerdo_IN4="int pino_motor_esquerdo_IN4= "+pino_motor_esquerdo_IN4+";";Blockly.Arduino.definitions_.pino_motor_direito_IN1="int pino_motor_direito_IN1= "+pino_motor_direito_IN1+";";Blockly.Arduino.definitions_.pino_motor_direito_IN2="int pino_motor_direito_IN2= "+pino_motor_direito_IN2+";";Blockly.Arduino.definitions_.pino_enable_motor_esquerdo=
"int pino_enable_motor_esquerdo= "+pino_enable_motor_esquerdo+";";Blockly.Arduino.definitions_.pino_enable_motor_direito="int pino_enable_motor_direito= "+pino_enable_motor_direito+";"}
function define_codigo_funcao_setup_carrinho(){var a="//habilita e definie a velocidade dos dois motores do carrinho \n  analogWrite(pino_enable_motor_esquerdo,"+velocidade_motor_esquerdo+");\n  analogWrite(pino_enable_motor_direito,"+velocidade_motor_direito+");\n  //-----------------";Blockly.Arduino.addSetup("io_pino_motor_esquerdo_IN3","pinMode(pino_motor_esquerdo_IN3, OUTPUT);",!1);Blockly.Arduino.addSetup("io_pino_motor_esquerdo_IN4","pinMode(pino_motor_esquerdo_IN4, OUTPUT);",!1);Blockly.Arduino.addSetup("io_pino_motor_direito_IN1",
"pinMode(pino_motor_direito_IN1, OUTPUT);",!1);Blockly.Arduino.addSetup("io_pino_motor_direito_IN2","pinMode(pino_motor_direito_IN2, OUTPUT);",!1);Blockly.Arduino.addSetup("io_pino_enable_motor_esquerdo","pinMode(pino_enable_motor_esquerdo, OUTPUT);",!1);Blockly.Arduino.addSetup("io_pino_enable_motor_direito","pinMode(pino_enable_motor_direito, OUTPUT);",!1);Blockly.Arduino.addSetup("pino_enable_motor_esquerdo",a,!1)}
Blockly.Arduino.mover_carrinho_para_frente=function(a){reserva_pinos_carrinho(a);declara_variaveis_pinos_carrinho();define_codigo_funcao_setup_carrinho();return"digitalWrite(pino_motor_esquerdo_IN3,HIGH);\ndigitalWrite(pino_motor_esquerdo_IN4,LOW);\ndigitalWrite(pino_motor_direito_IN1,HIGH);\ndigitalWrite(pino_motor_direito_IN2,LOW);\n"};Blockly.Arduino.mover_carrinho_para_tras=function(a){reserva_pinos_carrinho(a);declara_variaveis_pinos_carrinho();define_codigo_funcao_setup_carrinho();return"digitalWrite(pino_motor_esquerdo_IN3,LOW);\ndigitalWrite(pino_motor_esquerdo_IN4,HIGH);\ndigitalWrite(pino_motor_direito_IN1,LOW);\ndigitalWrite(pino_motor_direito_IN2,HIGH);\n"};
Blockly.Arduino.virar_carrinho_para_esquerda=function(a){reserva_pinos_carrinho(a);declara_variaveis_pinos_carrinho();define_codigo_funcao_setup_carrinho();return"// Virar carrinho para a esquerda \ndigitalWrite(pino_motor_esquerdo_IN3,LOW);\ndigitalWrite(pino_motor_esquerdo_IN4,HIGH);\ndigitalWrite(pino_motor_direito_IN1,HIGH);\ndigitalWrite(pino_motor_direito_IN2,LOW);\n"};
Blockly.Arduino.virar_carrinho_para_direita=function(a){reserva_pinos_carrinho(a);declara_variaveis_pinos_carrinho();define_codigo_funcao_setup_carrinho();return"// Virar carrinho para a direita \ndigitalWrite(pino_motor_esquerdo_IN3,HIGH);\ndigitalWrite(pino_motor_esquerdo_IN4,LOW);\ndigitalWrite(pino_motor_direito_IN1,LOW);\ndigitalWrite(pino_motor_direito_IN2,HIGH);\n"};
Blockly.Arduino.virar_carrinho_para_esquerda_ou_direita=function(a){reserva_pinos_carrinho(a);declara_variaveis_pinos_carrinho();define_codigo_funcao_setup_carrinho();Blockly.Arduino.definitions_.rand_number="int rand_number;";return" rand_number = random(1,2); \n if (rand_number == 1) { \n  // Virar carrinho para a esquerda \n    digitalWrite(pino_motor_esquerdo_IN3,LOW);\n    digitalWrite(pino_motor_esquerdo_IN4,HIGH);\n    digitalWrite(pino_motor_direito_IN1,HIGH);\n    digitalWrite(pino_motor_direito_IN2,LOW);\n} \nelse \n{ \n  // Virar carrinho para a direita \n    digitalWrite(pino_motor_esquerdo_IN3,HIGH);\n    digitalWrite(pino_motor_esquerdo_IN4,LOW);\n    digitalWrite(pino_motor_direito_IN1,LOW);\n    digitalWrite(pino_motor_direito_IN2,HIGH);\n} \n"};
Blockly.Arduino.parar_carrinho=function(a){reserva_pinos_carrinho(a);declara_variaveis_pinos_carrinho();define_codigo_funcao_setup_carrinho();return"digitalWrite(pino_motor_esquerdo_IN3,HIGH);\ndigitalWrite(pino_motor_esquerdo_IN4,HIGH);\ndigitalWrite(pino_motor_direito_IN1,HIGH);\ndigitalWrite(pino_motor_direito_IN2,HIGH);\n"};Blockly.Arduino.finalizar_circuito=function(a){reserva_pinos_carrinho(a);declara_variaveis_pinos_carrinho();define_codigo_funcao_setup_carrinho();return"digitalWrite(pino_motor_esquerdo_IN3,HIGH);\ndigitalWrite(pino_motor_esquerdo_IN4,HIGH);\ndigitalWrite(pino_motor_direito_IN1,HIGH);\ndigitalWrite(pino_motor_direito_IN2,HIGH);\nwhile (true);\n"};Blockly.Arduino.colour={};Blockly.Arduino.colour_picker=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_random=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_rgb=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.colour_blend=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.controles={};Blockly.Arduino.delay=function(a){return"delay ("+a.getFieldValue("milisegundos")+");\n"};Blockly.Arduino.repetir=function(a){var b=Blockly.Arduino.statementToCode(a,"blocos_dbk"),c=a.getFieldValue("numero_repeticoes");b=Blockly.Arduino.addLoopTrap(b,a.id);a=Blockly.Arduino.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE);return"for (int "+a+" = 0; "+a+" < "+c+"; "+a+"++) {\n"+b+"}\n"};Blockly.Arduino.parar_repeticao_do_programa=function(a){return"while (true);\n"};
Blockly.Arduino.condicional_simples=function(a){var b=Blockly.Arduino.valueToCode(a,"condicao",Blockly.Arduino.ORDER_NONE)||"false";a=Blockly.Arduino.statementToCode(a,"codigo_condicional");return"if ("+b+") {\n"+a+"}\n"};
Blockly.Arduino.condicional_completo=function(a){var b=Blockly.Arduino.valueToCode(a,"condicao",Blockly.Arduino.ORDER_NONE)||"false",c=Blockly.Arduino.statementToCode(a,"codigo_condicional");a=Blockly.Arduino.statementToCode(a,"codigo_execcao");return"if ("+b+") {\n"+c+"} else {\n"+a+"}\n"};Blockly.Arduino.enquanto=function(a){var b=Blockly.Arduino.valueToCode(a,"condicao",Blockly.Arduino.ORDER_NONE)||"false";a=Blockly.Arduino.statementToCode(a,"codigo_enquanto");return"while("+b+") {\n"+a+"}\n"};Blockly.Arduino.IO={};Blockly.Arduino.io_digitalwrite=function(a){var b=a.getFieldValue("PIN"),c=Blockly.Arduino.valueToCode(a,"STATE",Blockly.Arduino.ORDER_ATOMIC)||"LOW";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);return"digitalWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_digitalread=function(a){var b=a.getFieldValue("PIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Digital Read");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);",!1);return["digitalRead("+b+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_builtin_led=function(a){var b=a.getFieldValue("BUILT_IN_LED"),c=Blockly.Arduino.valueToCode(a,"STATE",Blockly.Arduino.ORDER_ATOMIC)||"LOW";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Set LED");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);return"digitalWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_analogwrite=function(a){var b=a.getFieldValue("PIN"),c=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Analogue Write");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);",!1);0>c||255<c?a.setWarningText("The analogue value set must be between 0 and 255","pwm_value"):a.setWarningText(null,"pwm_value");return"analogWrite("+b+", "+c+");\n"};
Blockly.Arduino.io_analogread=function(a){var b=a.getFieldValue("PIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Analogue Read");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);",!1);return["analogRead("+b+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.io_highlow=function(a){return[a.getFieldValue("STATE"),Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_pulsein=function(a){var b=a.getFieldValue("PULSEPIN"),c=Blockly.Arduino.valueToCode(a,"PULSETYPE",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Pulse Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);\n",!1);return["pulseIn("+b+", "+c+")",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.io_pulsetimeout=function(a){var b=a.getFieldValue("PULSEPIN"),c=Blockly.Arduino.valueToCode(a,"PULSETYPE",Blockly.Arduino.ORDER_ATOMIC),d=Blockly.Arduino.valueToCode(a,"TIMEOUT",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.INPUT,"Pulse Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", INPUT);\n",!1);return["pulseIn("+b+", "+c+", "+d+")",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.lists={};Blockly.Arduino.lists_create_empty=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_create_with=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_repeat=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_length=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_isEmpty=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_indexOf=Blockly.Arduino.noGeneratorCodeInline;Blockly.Arduino.lists_getIndex=Blockly.Arduino.noGeneratorCodeInline;
Blockly.Arduino.lists_setIndex=Blockly.Arduino.noGeneratorCodeLine;Blockly.Arduino.logic={};Blockly.Arduino.controls_if=function(a){var b=0,c=Blockly.Arduino.valueToCode(a,"IF"+b,Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO"+b),e="if ("+c+") {\n"+d+"}";for(b=1;b<=a.elseifCount_;b++)c=Blockly.Arduino.valueToCode(a,"IF"+b,Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO"+b),e+=" else if ("+c+") {\n"+d+"}";a.elseCount_&&(d=Blockly.Arduino.statementToCode(a,"ELSE"),e+=" else {\n"+d+"}");return e+"\n"};
Blockly.Arduino.logic_compare=function(a){var b={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[a.getFieldValue("OP")],c="=="==b||"!="==b?Blockly.Arduino.ORDER_EQUALITY:Blockly.Arduino.ORDER_RELATIONAL,d=Blockly.Arduino.valueToCode(a,"A",c)||"0";a=Blockly.Arduino.valueToCode(a,"B",c)||"0";return[d+" "+b+" "+a,c]};
Blockly.Arduino.logic_operation=function(a){var b="AND"==a.getFieldValue("OP")?"&&":"||",c="&&"==b?Blockly.Arduino.ORDER_LOGICAL_AND:Blockly.Arduino.ORDER_LOGICAL_OR,d=Blockly.Arduino.valueToCode(a,"A",c)||"false";a=Blockly.Arduino.valueToCode(a,"B",c)||"false";if(d||a){var e="&&"==b?"true":"false";d||(d=e);a||(a=e)}else a=d="false";return[d+" "+b+" "+a,c]};
Blockly.Arduino.logic_negate=function(a){var b=Blockly.Arduino.ORDER_UNARY_PREFIX;return["!"+(Blockly.Arduino.valueToCode(a,"BOOL",b)||"false"),b]};Blockly.Arduino.logic_boolean=function(a){return["TRUE"==a.getFieldValue("BOOL")?"true":"false",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.logic_null=function(a){return["NULL",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.logic_ternary=function(a){var b=Blockly.Arduino.valueToCode(a,"IF",Blockly.Arduino.ORDER_CONDITIONAL)||"false",c=Blockly.Arduino.valueToCode(a,"THEN",Blockly.Arduino.ORDER_CONDITIONAL)||"null";a=Blockly.Arduino.valueToCode(a,"ELSE",Blockly.Arduino.ORDER_CONDITIONAL)||"null";return[b+" ? "+c+" : "+a,Blockly.Arduino.ORDER_CONDITIONAL]};Blockly.Arduino.loops={};Blockly.Arduino.controls_repeat=function(a){var b=Number(a.getFieldValue("TIMES")),c=Blockly.Arduino.statementToCode(a,"DO");c=Blockly.Arduino.addLoopTrap(c,a.id);a=Blockly.Arduino.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE);return"for (int "+a+" = 0; "+a+" < "+b+"; "+a+"++) {\n"+c+"}\n"};
Blockly.Arduino.controls_repeat_ext=function(a){var b=Blockly.Arduino.valueToCode(a,"TIMES",Blockly.Arduino.ORDER_ADDITIVE)||"0",c=Blockly.Arduino.statementToCode(a,"DO");c=Blockly.Arduino.addLoopTrap(c,a.id);a="";var d=Blockly.Arduino.variableDB_.getDistinctName("count",Blockly.Variables.NAME_TYPE),e=b;b.match(/^\w+$/)||Blockly.isNumber(b)||(e=Blockly.Arduino.variableDB_.getDistinctName("repeat_end",Blockly.Variables.NAME_TYPE),a+="int "+e+" = "+b+";\n");return a+("for (int "+d+" = 0; "+d+" < "+
e+"; "+d+"++) {\n"+c+"}\n")};Blockly.Arduino.controls_whileUntil=function(a){var b="UNTIL"==a.getFieldValue("MODE"),c=Blockly.Arduino.valueToCode(a,"BOOL",b?Blockly.Arduino.ORDER_LOGICAL_OR:Blockly.Arduino.ORDER_NONE)||"false",d=Blockly.Arduino.statementToCode(a,"DO");d=Blockly.Arduino.addLoopTrap(d,a.id);b&&(c.match(/^\w+$/)||(c="("+c+")"),c="!"+c);return"while ("+c+") {\n"+d+"}\n"};
Blockly.Arduino.controls_for=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),c=Blockly.Arduino.valueToCode(a,"FROM",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",d=Blockly.Arduino.valueToCode(a,"TO",Blockly.Arduino.ORDER_ASSIGNMENT)||"0",e=Blockly.Arduino.valueToCode(a,"BY",Blockly.Arduino.ORDER_ASSIGNMENT)||"1",f=Blockly.Arduino.statementToCode(a,"DO");f=Blockly.Arduino.addLoopTrap(f,a.id);if(Blockly.isNumber(c)&&Blockly.isNumber(d)&&Blockly.isNumber(e)){var g=
parseFloat(c)<=parseFloat(d);a="for ("+b+" = "+c+"; "+b+(g?" <= ":" >= ")+d+"; "+b;b=Math.abs(parseFloat(e));a=(1==b?a+(g?"++":"--"):a+((g?" += ":" -= ")+b))+(") {\n"+f+"}\n")}else a="",g=c,c.match(/^\w+$/)||Blockly.isNumber(c)||(g=Blockly.Arduino.variableDB_.getDistinctName(b+"_start",Blockly.Variables.NAME_TYPE),a+="int "+g+" = "+c+";\n"),c=d,d.match(/^\w+$/)||Blockly.isNumber(d)||(c=Blockly.Arduino.variableDB_.getDistinctName(b+"_end",Blockly.Variables.NAME_TYPE),a+="int "+c+" = "+d+";\n"),d=Blockly.Arduino.variableDB_.getDistinctName(b+
"_inc",Blockly.Variables.NAME_TYPE),a+="int "+d+" = ",a=Blockly.isNumber(e)?a+(Math.abs(e)+";\n"):a+("abs("+e+");\n"),a=a+("if ("+g+" > "+c+") {\n")+(Blockly.Arduino.INDENT+d+" = -"+d+";\n"),a+="}\n",a+="for ("+b+" = "+g+";\n     "+d+" >= 0 ? "+b+" <= "+c+" : "+b+" >= "+c+";\n     "+b+" += "+d+") {\n"+f+"}\n";return a};Blockly.Arduino.controls_forEach=Blockly.Arduino.noGeneratorCodeLine;
Blockly.Arduino.controls_flow_statements=function(a){switch(a.getFieldValue("FLOW")){case "BREAK":return"break;\n";case "CONTINUE":return"continue;\n"}throw"Unknown flow statement.";};Blockly.Arduino.map={};Blockly.Arduino.base_map=function(a){var b=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_NONE)||"0";a=Blockly.Arduino.valueToCode(a,"DMAX",Blockly.Arduino.ORDER_ATOMIC)||"0";return["map("+b+", 0, 1024, 0, "+a+")",Blockly.Arduino.ORDER_NONE]};Blockly.Arduino.math={};Blockly.Arduino.math_number=function(a){a=parseFloat(a.getFieldValue("NUM"));Infinity==a?a="INFINITY":-Infinity==a&&(a="-INFINITY");return[a,Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.math_arithmetic=function(a){var b={ADD:[" + ",Blockly.Arduino.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Arduino.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Arduino.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Arduino.ORDER_MULTIPLICATIVE],POWER:[null,Blockly.Arduino.ORDER_NONE]}[a.getFieldValue("OP")],c=b[0];b=b[1];var d=Blockly.Arduino.valueToCode(a,"A",b)||"0";a=Blockly.Arduino.valueToCode(a,"B",b)||"0";return c?[d+c+a,b]:["Math.pow("+d+", "+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.math_single=function(a){var b=a.getFieldValue("OP");if("NEG"==b)return a=Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_UNARY_PREFIX)||"0","-"==a[0]&&(a=" "+a),["-"+a,Blockly.Arduino.ORDER_UNARY_PREFIX];a="ABS"==b||"ROUND"==b.substring(0,5)?Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_UNARY_POSTFIX)||"0":"SIN"==b||"COS"==b||"TAN"==b?Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0":Blockly.Arduino.valueToCode(a,"NUM",Blockly.Arduino.ORDER_NONE)||
"0";switch(b){case "ABS":var c="abs("+a+")";break;case "ROOT":c="sqrt("+a+")";break;case "LN":c="log("+a+")";break;case "EXP":c="exp("+a+")";break;case "POW10":c="pow(10,"+a+")";break;case "ROUND":c="round("+a+")";break;case "ROUNDUP":c="ceil("+a+")";break;case "ROUNDDOWN":c="floor("+a+")";break;case "SIN":c="sin("+a+" / 180 * Math.PI)";break;case "COS":c="cos("+a+" / 180 * Math.PI)";break;case "TAN":c="tan("+a+" / 180 * Math.PI)"}if(c)return[c,Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(b){case "LOG10":c=
"log("+a+") / log(10)";break;case "ASIN":c="asin("+a+") / M_PI * 180";break;case "ACOS":c="acos("+a+") / M_PI * 180";break;case "ATAN":c="atan("+a+") / M_PI * 180";break;default:throw"Unknown math operator: "+b;}return[c,Blockly.Arduino.ORDER_MULTIPLICATIVE]};
Blockly.Arduino.math_constant=function(a){return{PI:["M_PI",Blockly.Arduino.ORDER_UNARY_POSTFIX],E:["M_E",Blockly.Arduino.ORDER_UNARY_POSTFIX],GOLDEN_RATIO:["(1 + sqrt(5)) / 2",Blockly.Arduino.ORDER_MULTIPLICATIVE],SQRT2:["M_SQRT2",Blockly.Arduino.ORDER_UNARY_POSTFIX],SQRT1_2:["M_SQRT1_2",Blockly.Arduino.ORDER_UNARY_POSTFIX],INFINITY:["INFINITY",Blockly.Arduino.ORDER_ATOMIC]}[a.getFieldValue("CONSTANT")]};
Blockly.Arduino.math_number_property=function(a){var b=Blockly.Arduino.valueToCode(a,"NUMBER_TO_CHECK",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0",c=a.getFieldValue("PROPERTY");if("PRIME"==c)return a=Blockly.Arduino.addFunction("mathIsPrime",["boolean "+Blockly.Arduino.DEF_FUNC_NAME+"(int n) {","  // https://en.wikipedia.org/wiki/Primality_test#Naive_methods\n  if (n == 2 || n == 3) {\n    return true;\n  }\n  // False if n is NaN, negative, is 1.\n  // And false if n is divisible by 2 or 3.\n  if (isnan(n) || (n <= 1) || (n == 1) || (n % 2 == 0) || (n % 3 == 0)) {\n    return false;\n  }\n  // Check all the numbers of form 6k +/- 1, up to sqrt(n).\n  for (int x = 6; x <= sqrt(n) + 1; x += 6) {\n    if (n % (x - 1) == 0 || n % (x + 1) == 0) {\n      return false;\n    }\n  }\n  return true;\n}"].join("\n")),
Blockly.Arduino.addInclude("math","#include <math.h>"),[a+"("+b+")",Blockly.Arduino.ORDER_UNARY_POSTFIX];switch(c){case "EVEN":var d=b+" % 2 == 0";break;case "ODD":d=b+" % 2 == 1";break;case "WHOLE":Blockly.Arduino.addInclude("math","#include <math.h>");d="(floor("+b+") == "+b+")";break;case "POSITIVE":d=b+" > 0";break;case "NEGATIVE":d=b+" < 0";break;case "DIVISIBLE_BY":a=Blockly.Arduino.valueToCode(a,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0",d=b+" % "+a+" == 0"}return[d,Blockly.Arduino.ORDER_EQUALITY]};
Blockly.Arduino.math_change=function(a){var b=Blockly.Arduino.valueToCode(a,"DELTA",Blockly.Arduino.ORDER_ADDITIVE)||"0";return Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" += "+b+";\n"};Blockly.Arduino.math_round=Blockly.Arduino.math_single;Blockly.Arduino.math_trig=Blockly.Arduino.math_single;Blockly.Arduino.math_on_list=Blockly.Arduino.noGeneratorCodeInline;
Blockly.Arduino.math_modulo=function(a){var b=Blockly.Arduino.valueToCode(a,"DIVIDEND",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0";a=Blockly.Arduino.valueToCode(a,"DIVISOR",Blockly.Arduino.ORDER_MULTIPLICATIVE)||"0";return[b+" % "+a,Blockly.Arduino.ORDER_MULTIPLICATIVE]};
Blockly.Arduino.math_constrain=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_NONE)||"0",c=Blockly.Arduino.valueToCode(a,"LOW",Blockly.Arduino.ORDER_NONE)||"0";a=Blockly.Arduino.valueToCode(a,"HIGH",Blockly.Arduino.ORDER_NONE)||"0";return["("+b+" < "+c+" ? "+c+" : ( "+b+" > "+a+" ? "+a+" : "+b+"))",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.math_random_int=function(a){var b=Blockly.Arduino.valueToCode(a,"FROM",Blockly.Arduino.ORDER_NONE)||"0";a=Blockly.Arduino.valueToCode(a,"TO",Blockly.Arduino.ORDER_NONE)||"0";var c=Blockly.Arduino.variableDB_.getDistinctName("math_random_int",Blockly.Generator.NAME_TYPE);Blockly.Arduino.math_random_int.random_function=c;return[Blockly.Arduino.addFunction("mathRandomInt",["int "+Blockly.Arduino.DEF_FUNC_NAME+"(int min, int max) {","  if (min > max) {\n    // Swap min and max to ensure min is smaller.\n    int temp = min;\n    min = max;\n    max = temp;\n  }\n  return min + (rand() % (max - min + 1));\n}"].join("\n"))+
"("+b+", "+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.math_random_float=function(a){return["(rand() / RAND_MAX)",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.procedures={};
Blockly.Arduino.procedures_defreturn=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=Blockly.Arduino.statementToCode(a,"STACK");Blockly.Arduino.STATEMENT_PREFIX&&(c=Blockly.Arduino.prefixLines(Blockly.Arduino.STATEMENT_PREFIX.replace(/%1/g,"'"+a.id+"'"),Blockly.Arduino.INDENT)+c);Blockly.Arduino.INFINITE_LOOP_TRAP&&(c=Blockly.Arduino.INFINITE_LOOP_TRAP.replace(/%1/g,"'"+a.id+"'")+c);var d=Blockly.Arduino.valueToCode(a,"RETURN",Blockly.Arduino.ORDER_NONE)||
"";d&&(d="  return "+d+";\n");for(var e=[],f=0;f<a.arguments_.length;f++)e[f]=Blockly.Arduino.getArduinoType_(a.getArgType(a.arguments_[f]))+" "+Blockly.Arduino.variableDB_.getName(a.arguments_[f],Blockly.Variables.NAME_TYPE);f=Blockly.Types.NULL;a.getReturnType&&(f=a.getReturnType());f=Blockly.Arduino.getArduinoType_(f);c=f+" "+b+"("+e.join(", ")+") {\n"+c+d+"}";c=Blockly.Arduino.scrub_(a,c);Blockly.Arduino.userFunctions_[b]=c;return null};Blockly.Arduino.procedures_defnoreturn=Blockly.Arduino.procedures_defreturn;
Blockly.Arduino.procedures_callreturn=function(a){for(var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Arduino.valueToCode(a,"ARG"+d,Blockly.Arduino.ORDER_NONE)||"null";return[b+"("+c.join(", ")+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.procedures_callnoreturn=function(a){for(var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("NAME"),Blockly.Procedures.NAME_TYPE),c=[],d=0;d<a.arguments_.length;d++)c[d]=Blockly.Arduino.valueToCode(a,"ARG"+d,Blockly.Arduino.ORDER_NONE)||"null";return b+"("+c.join(", ")+");\n"};
Blockly.Arduino.procedures_ifreturn=function(a){var b="if ("+(Blockly.Arduino.valueToCode(a,"CONDITION",Blockly.Arduino.ORDER_NONE)||"false")+") {\n";a.hasReturnValue_?(a=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_NONE)||"null",b+="  return "+a+";\n"):b+="  return;\n";return b+"}\n"};
Blockly.Arduino.arduino_functions=function(a){var b=Blockly.Arduino.statementToCode(a,"SETUP_FUNC");b&&Blockly.Arduino.addSetup("userSetupCode",b,!0);a=a.getInputTargetBlock("LOOP_FUNC");b=Blockly.Arduino.blockToCode(a);if(!goog.isString(b))throw'Expecting code from statement block "'+a.type+'".';return b};Blockly.Arduino.sensores={};
var tipo_biblioteca_ultrassonico=DB4K_tipo_biblioteca_ultrassonico,pino_ultrasonic_echo=DB4K_pino_ultrasonic_echo,pino_ultrasonic_envio_sinal=DB4K_pino_ultrasonic_envio_sinal,ultrasonic_delay_leitura=DB4K_ultrasonic_delay_leitura,pino_analogico_sensor_temperatura=DB4K_pino_analogico_sensor_temperatura,valor_margem_temperatura_baixa=DB4K_valor_margem_temperatura_baixa,valor_margem_temperatura_alta=DB4K_valor_margem_temperatura_alta,pino_analogico_LDR_luz=DB4K_pino_analogico_LDR_luz,valor_margem_luz_baixa=
DB4K_valor_margem_luz_baixa,valor_margem_luz_alta=DB4K_valor_margem_luz_alta,tipo_leitura_sensor=DB4K_tipo_leitura_sensor,pino_digital_sensor_linha_esquerdo=DB4K_pino_digital_sensor_linha_esquerdo,pino_digital_sensor_linha_direito=DB4K_pino_digital_sensor_linha_direito,pino_analogico_sensor_linha_direito=DB4K_pino_analogico_sensor_linha_direito,pino_analogico_sensor_linha_esquerdo=DB4K_pino_analogico_sensor_linha_esquerdo,valor_margem_refletancia_baixa=DB4K_valor_margem_refletancia_baixa,valor_margem_refletancia_alta=
DB4K_valor_margem_refletancia_alta,pino_analogico_potenciometro=DB4K_pino_analogico_potenciometro,med_val_potenciometro_sup=DB4K_med_val_potenciometro_sup,med_val_potenciometro_inf=DB4K_med_val_potenciometro_inf,pino_sensor_toque=DB4K_pino_sensor_toque;function codigo_verifica_luminosidade(){return"int luminosidade = 0;\nfor (int i = 0; i<10;++i){\nluminosidade = analogRead(pino_analogico_LDR_luz) + luminosidade;\n}\nluminosidade = luminosidade/10;\nreturn luminosidade;\n"}
Blockly.Arduino.sensor_luz=function(a){var b=a.getFieldValue("luminosidade"),c=["\nint "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_verifica_luminosidade()+"}\n"];c=Blockly.Arduino.addFunction("verifica_luminosidade",c.join("\n"));Blockly.Arduino.addSetup("io_referencia_luz_alta","referencia_luz_alta = "+c+"() + "+valor_margem_luz_alta+";",!1);Blockly.Arduino.addSetup("io_referencia_luz_baixa","referencia_luz_baixa = "+c+"() - "+valor_margem_luz_baixa+";",!1);Blockly.Arduino.definitions_.pino_analogico_LDR_luz=
"int pino_analogico_LDR_luz = "+pino_analogico_LDR_luz+";";Blockly.Arduino.definitions_.referencia_luz_alta="int referencia_luz_alta;";Blockly.Arduino.definitions_.referencia_luz_baixa="int referencia_luz_baixa;";Blockly.Arduino.reservePin(a,pino_analogico_LDR_luz,Blockly.Arduino.PinTypes.INPUT,"Analogue Read");if("forte"==b)var d="("+c+"() >= referencia_luz_alta )";"ambiente"==b&&(d="((referencia_luz_baixa <"+c+"())&&("+c+"() < referencia_luz_alta ))");"fraca"==b&&(d="("+c+"() <= referencia_luz_baixa )");
return[d,Blockly.Arduino.ORDER_CONDITIONAL]};function codigo_verifica_temperatura(){return"float temperatura = 0;\nfor (int i = 0; i<10;++i){\ntemperatura = temp.getTemp() + temperatura;\n}\ntemperatura = temperatura/10;\nreturn temperatura;\n"}
Blockly.Arduino.sensor_temperatura=function(a){var b=a.getFieldValue("temperatura"),c=["\nfloat "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_verifica_temperatura()+"}\n"];c=Blockly.Arduino.addFunction("verifica_temperatura",c.join("\n"));Blockly.Arduino.addInclude("sensor_temperatura","#include <Thermistor.h>");Blockly.Arduino.definitions_.pino_analogico_sensor_temperatura="int pino_analogico_sensor_temperatura = "+pino_analogico_sensor_temperatura+";";Blockly.Arduino.definitions_.referencia_temperatura_alta=
"float referencia_temperatura_alta;";Blockly.Arduino.definitions_.referencia_temperatura_baixa="float referencia_temperatura_baixa;";Blockly.Arduino.addDeclaration("sensor_temperatura","Thermistor temp(pino_analogico_sensor_temperatura);");Blockly.Arduino.addSetup("io_referencia_temperatura_alta","referencia_temperatura_alta = "+c+"() + "+valor_margem_temperatura_alta+";",!1);Blockly.Arduino.addSetup("io_referencia_temperatura_baixa","referencia_temperatura_baixa = "+c+"() - "+valor_margem_temperatura_baixa+
";",!1);Blockly.Arduino.reservePin(a,pino_analogico_sensor_temperatura,Blockly.Arduino.PinTypes.INPUT,"Analogue Read");if("alta"==b)var d="("+c+"() >= referencia_temperatura_alta )";"ambiente"==b&&(d="((referencia_temperatura_baixa <"+c+"())&&("+c+"() < referencia_temperatura_alta ))");"baixa"==b&&(d="("+c+"() <= referencia_temperatura_baixa )");return[d,Blockly.Arduino.ORDER_CONDITIONAL]};
function codigo_verifica_distancia(){return"int distancia = 0;\nfor (int i = 0; i<10;++i){\ndistancia = "+(1==tipo_biblioteca_ultrassonico?"ultrasonic.Ranging(CM)":"ultrasonic.read()")+" + distancia;\n}\ndistancia = distancia/10;\nreturn distancia;\n"}
Blockly.Arduino.sensor_distancia=function(a){a.getFieldValue("operador");var b=a.getFieldValue("distancia"),c=["\nint "+Blockly.Arduino.DEF_FUNC_NAME+"()\n{\n"+codigo_verifica_distancia()+"}\n"];c=Blockly.Arduino.addFunction("verifica_distancia",c.join("\n"));var d={igual:"==",menor:"<",maior:">"}[a.getFieldValue("operador")];Blockly.Arduino.addInclude("sensor_distancia","#include <Ultrasonic.h>");Blockly.Arduino.definitions_.pino_ultrasonic_envio_sinal="int pino_ultrasonic_envio_sinal = "+pino_ultrasonic_envio_sinal+
";";Blockly.Arduino.definitions_.pino_ultrasonic_echo="int pino_ultrasonic_echo = "+pino_ultrasonic_echo+";";Blockly.Arduino.addDeclaration("sensor_distancia","Ultrasonic ultrasonic(pino_ultrasonic_envio_sinal,pino_ultrasonic_echo);");Blockly.Arduino.reservePin(a,pino_ultrasonic_echo,Blockly.Arduino.PinTypes.INPUT,"Digital Read");Blockly.Arduino.reservePin(a,pino_ultrasonic_envio_sinal,Blockly.Arduino.PinTypes.OUTPUT,"Digital Write");Blockly.Arduino.addSetup("io_pino_ultrasonic_echo","pinMode(pino_ultrasonic_echo, INPUT);",
!1);Blockly.Arduino.addSetup("io_pino_ultrasonic_envio_sinal","pinMode(pino_ultrasonic_envio_sinal, OUTPUT);",!1);return["("+c+"() "+d+" "+b+" )",Blockly.Arduino.ORDER_CONDITIONAL]};function codigo_verifica_refletancia(){return"int refletancia = 0;\nfor (int i = 0; i<10;++i){\nrefletancia = analogRead(pino_sensor_reflexo) + refletancia;\n}\nrefletancia = refletancia/10;\nreturn refletancia;\n"}
Blockly.Arduino.sensor_linha=function(a){var b=a.getFieldValue("REFLEXO");a=a.getFieldValue("DIRECAO");if("a"==tipo_leitura_sensor){var c=["\nint "+Blockly.Arduino.DEF_FUNC_NAME+"(int pino_sensor_reflexo)\n{\n"+codigo_verifica_refletancia()+"}\n"];c=Blockly.Arduino.addFunction("verifica_refletancia",c.join("\n"));var d=pino_analogico_sensor_linha_direito,e=pino_analogico_sensor_linha_esquerdo;if("DIREITA"==a)if(Blockly.Arduino.definitions_.referencia_reflexo_direita="int referencia_reflexo_direita;",
Blockly.Arduino.definitions_.pino_seguidor_direita="int pino_seguidor_direita = "+d+";",Blockly.Arduino.addSetup("io_referencia_reflexo_direita","referencia_reflexo_direita = "+c+"(pino_seguidor_direita);",!1),"MUITO"==b)var f="analogRead(pino_seguidor_direita) > referencia_reflexo_direita + "+valor_margem_refletancia_alta;else"POUCO"==b&&(f="analogRead(pino_seguidor_direita) < referencia_reflexo_direita - "+valor_margem_refletancia_baixa);else"ESQUERDA"==a&&(Blockly.Arduino.definitions_.referencia_reflexo_esquerda=
"int referencia_reflexo_esquerda;",Blockly.Arduino.definitions_.pino_seguidor_esquerda="int pino_seguidor_esquerda = "+e+";",Blockly.Arduino.addSetup("io_referencia_reflexo_esquerda","referencia_reflexo_esquerda = "+c+"(pino_seguidor_esquerda);",!1),"MUITO"==b?f="analogRead(pino_seguidor_esquerda) > referencia_reflexo_esquerda + "+valor_margem_refletancia_alta:"POUCO"==b&&(f="analogRead(pino_seguidor_esquerda) < referencia_reflexo_esquerda - "+valor_margem_refletancia_baixa))}else d=pino_digital_sensor_linha_direito,
e=pino_digital_sensor_linha_esquerdo,"DIREITA"==a?(Blockly.Arduino.addSetup("io_pino_seguidor_direita","pinMode(pino_seguidor_direita, INPUT);",!1),Blockly.Arduino.definitions_.pino_seguidor_direita="int pino_seguidor_direita = "+d+";","MUITO"==b?f="digitalRead ("+d+")== 0":"POUCO"==b&&(f="digitalRead ("+d+")== 1")):"ESQUERDA"==a&&(Blockly.Arduino.definitions_.pino_seguidor_esquerda="int pino_seguidor_esquerda = "+e+";",Blockly.Arduino.addSetup("io_pino_seguidor_esquerda","pinMode(pino_seguidor_esquerda, INPUT);",
!1),"MUITO"==b?f="digitalRead ("+e+")== 0":"POUCO"==b&&(f="digitalRead ("+e+")== 1"));return[f,Blockly.Arduino.ORDER_CONDITIONAL]};
Blockly.Arduino.potenciometro=function(a){a=a.getFieldValue("potenciometro");Blockly.Arduino.definitions_.pino_potenciometro="int pino_potenciometro = "+pino_analogico_potenciometro+";";if("BAIXO"==a)var b="(analogRead(pino_potenciometro) > "+med_val_potenciometro_sup+")";"MEDIO"==a&&(b="(("+med_val_potenciometro_inf+" < analogRead(pino_potenciometro)) && (analogRead(pino_potenciometro) < "+med_val_potenciometro_sup+"))");"ALTO"==a&&(b="(analogRead(pino_potenciometro) < "+med_val_potenciometro_inf+
")");return[b,Blockly.Arduino.ORDER_CONDITIONAL]};Blockly.Arduino.sensor_toque=function(a){a=a.getFieldValue("BOTAO");Blockly.Arduino.definitions_.sensor_toque="int sensor_toque = "+pino_sensor_toque+";";Blockly.Arduino.addSetup("io_sensor_toque","pinMode(sensor_toque, INPUT_PULLUP);",!1);if(1==a)var b="digitalRead(sensor_toque)==LOW";0==a&&(b="digitalRead(sensor_toque)!=LOW");return[b,Blockly.Arduino.ORDER_CONDITIONAL]};Blockly.Arduino.serial={};Blockly.Arduino.serial_print=function(a){for(var b=a.getFieldValue("SERIAL_ID"),c=Blockly.Arduino.valueToCode(a,"CONTENT",Blockly.Arduino.ORDER_ATOMIC)||"0",d="TRUE"==a.getFieldValue("NEW_LINE"),e=Blockly.Arduino.Boards.selected.serialPins[b],f=0;f<e.length;f++)Blockly.Arduino.reservePin(a,e[f][1],Blockly.Arduino.PinTypes.SERIAL,"SERIAL "+e[f][0]);return d?b+".println("+c+");\n":b+".print("+c+");\n"};
Blockly.Arduino.serial_setup=function(a){var b=a.getFieldValue("SERIAL_ID");a=a.getFieldValue("SPEED");Blockly.Arduino.addSetup("serial_"+b,b+".begin("+a+");",!0);return""};Blockly.Arduino.servo={};Blockly.Arduino.servo_write=function(a){var b=a.getFieldValue("SERVO_PIN"),c=Blockly.Arduino.valueToCode(a,"SERVO_ANGLE",Blockly.Arduino.ORDER_ATOMIC)||"90",d="myServo"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.SERVO,"Servo Write");Blockly.Arduino.addInclude("servo","#include <Servo.h>");Blockly.Arduino.addDeclaration("servo_"+b,"Servo "+d+";");Blockly.Arduino.addSetup("servo_"+b,d+".attach("+b+");",!0);return d+".write("+c+");\n"};
Blockly.Arduino.servo_read=function(a){var b=a.getFieldValue("SERVO_PIN"),c="myServo"+b;Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.SERVO,"Servo Read");Blockly.Arduino.addInclude("servo","#include <Servo.h>");Blockly.Arduino.addDeclaration("servo_"+b,"Servo "+c+";");Blockly.Arduino.addSetup("servo_"+b,c+".attach("+b+");",!0);return[c+".read()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.spi={};
Blockly.Arduino.spi_setup=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SHIFT_ORDER"),d=a.getFieldValue("SPI_CLOCK_DIVIDE");a=a.getFieldValue("SPI_MODE");Blockly.Arduino.addInclude("spi","#include <SPI.h>");Blockly.Arduino.addSetup("spi_order",b+".setBitOrder("+c+");",!0);Blockly.Arduino.addSetup("spi_mode",b+".setDataMode("+a+");",!0);Blockly.Arduino.addSetup("spi_div",b+".setClockDivider("+d+");",!0);Blockly.Arduino.addSetup("spi_begin",b+".begin();",!0);return""};
Blockly.Arduino.spi_transfer=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SS"),d=Blockly.Arduino.valueToCode(a,"SPI_DATA",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.addInclude("spi","#include <SPI.h>");Blockly.Arduino.addSetup("spi_begin",b+".begin();",!1);for(var e=Blockly.Arduino.Boards.selected.spiPins[b],f=0;f<e.length;f++)Blockly.Arduino.reservePin(a,e[f][1],Blockly.Arduino.PinTypes.SPI,"SPI "+e[f][0]);"none"!==c&&(Blockly.Arduino.reservePin(a,c,Blockly.Arduino.PinTypes.OUTPUT,
"SPI Slave pin"),Blockly.Arduino.addSetup("io_"+c,"pinMode("+c+", OUTPUT);",!1));a=[];"none"!==c&&a.push("digitalWrite("+c+", HIGH);");a.push(b+".transfer("+d+");");"none"!==c&&a.push("digitalWrite("+c+", LOW);");return a.join("\n")+"\n"};
Blockly.Arduino.spi_transfer_return=function(a){var b=a.getFieldValue("SPI_ID"),c=a.getFieldValue("SPI_SS"),d=Blockly.Arduino.valueToCode(a,"SPI_DATA",Blockly.Arduino.ORDER_ATOMIC)||"0";Blockly.Arduino.spi_transfer(a);return["none"===c?b+".transfer("+d+")":Blockly.Arduino.addFunction("spiReturnSlave"+c,["int "+Blockly.Arduino.DEF_FUNC_NAME+"() {","  int spiReturn = 0;","  digitalWrite("+c+", HIGH);","  spiReturn = "+b+".transfer("+d+");","  digitalWrite("+c+", LOW);","  return spiReturn;\n}"].join("\n"))+
"()",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.stepper={};
Blockly.Arduino.stepper_config=function(a){var b=Blockly.Arduino.PinTypes.STEPPER,c=a.getFieldValue("STEPPER_NAME"),d=a.getFieldValue("STEPPER_NUMBER_OF_PINS"),e=Blockly.Arduino.valueToCode(a,"STEPPER_STEPS",Blockly.Arduino.ORDER_ATOMIC)||"360",f=Blockly.Arduino.valueToCode(a,"STEPPER_SPEED",Blockly.Arduino.ORDER_ATOMIC)||"90",g=[a.getFieldValue("STEPPER_PIN1"),a.getFieldValue("STEPPER_PIN2")];"FOUR"===d&&(g.push(a.getFieldValue("STEPPER_PIN3")),g.push(a.getFieldValue("STEPPER_PIN4")));d="int "+c+
"["+g.length+"] = {";e="Stepper stepper_"+c+"("+e+", ";for(var h=0;h<g.length;h++)Blockly.Arduino.reservePin(a,g[h],b,"Stepper"),d+=g[h]+", ",e+=g[h]+", ";d=d.slice(0,-2)+"};";e=e.slice(0,-2)+");";Blockly.Arduino.addVariable(c,d,!0);c="stepper_"+c;Blockly.Arduino.addInclude("stepper","#include <Stepper.h>");Blockly.Arduino.addDeclaration(c,e);Blockly.Arduino.addSetup(c,c+".setSpeed("+f+");",!0);return""};
Blockly.Arduino.stepper_step=function(a){var b="stepper_"+a.getFieldValue("STEPPER_NAME");a=Blockly.Arduino.valueToCode(a,"STEPPER_STEPS",Blockly.Arduino.ORDER_ATOMIC)||"0";return b+".step("+a+");\n"};Blockly.Arduino.text={};Blockly.Arduino.text=function(a){return[Blockly.Arduino.quote_(a.getFieldValue("TEXT")),Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.text_join=function(a){if(0==a.itemCount_)return['""',Blockly.Arduino.ORDER_ATOMIC];if(1==a.itemCount_)return["String("+(Blockly.Arduino.valueToCode(a,"ADD0",Blockly.Arduino.ORDER_UNARY_POSTFIX)||'""')+")",Blockly.Arduino.ORDER_UNARY_POSTFIX];var b=[];for(var c=0;c<a.itemCount_;c++){var d=Blockly.Arduino.valueToCode(a,"ADD"+c,Blockly.Arduino.ORDER_NONE);b[c]=""==d?'""':"String("+d+")"}b=b.join(" + ");return[b,Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_append=function(a){var b=Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX);return b+" += "+(""==a?'""':"String("+a+")")+";\n"};Blockly.Arduino.text_length=function(a){return["String("+(Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX)||'""')+").length()",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_isEmpty=function(a){var b=[];b.push("boolean "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {");b.push("  if (msg.length() == 0) {");b.push("    return true;");b.push("  } else {");b.push("    return false;");b.push("  }");b.push("}");b=Blockly.Arduino.addFunction("isStringEmpty",b.join("\n"));a=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_UNARY_POSTFIX);return[b+"("+(""==a?'""':"String("+a+")")+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_trim=function(a){Blockly.Arduino.text_trim.OPERATORS={LEFT:".trim()",RIGHT:".trim()",BOTH:".trim()"};var b=a.getFieldValue("MODE");b=Blockly.Arduino.text_trim.OPERATORS[b];a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_UNARY_POSTFIX);return[(""==a?'""':"String("+a+")")+b,Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_print=function(a){var b=Blockly.Arduino.Boards.selected.serial[0][1];Blockly.Arduino.addSetup("serial_"+b,b+".begin(9600);",!1);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_NONE);return b+".print("+(""==a?'""':"String("+a+")")+");\n"};
Blockly.Arduino.text_prompt_ext=function(a){var b=Blockly.Arduino.Boards.selected.serial[0][1],c=a.getFieldValue("TYPE"),d=[],e=c==Blockly.Types.NUMBER.output;e?d.push("int "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {"):d.push("String "+Blockly.Arduino.DEF_FUNC_NAME+"(String msg) {");d.push("  "+b+".println(msg);");d.push("  boolean stringComplete = false;");e?d.push("  int content = 0;"):d.push('  String content = "";');d.push("  while (stringComplete == false) {");d.push("    if ("+b+".available()) {");
e?(d.push("      content = "+b+".parseInt();"),d.push("      stringComplete = true;")):(d.push("      char readChar = (char)"+b+".read();"),d.push("      if (readChar == '\\n' || readChar == '\\r') {"),d.push("        stringComplete = true;"),d.push("      } else {"),d.push("        content += readChar;"),d.push("      }"));d.push("    }");d.push("  }");d.push("  // Empty incoming serial buffer");d.push("  while(Serial.available()) { Serial.read(); };");d.push("  return content;");d.push("}");c=Blockly.Arduino.addFunction("getUserInputPrompt"+
c,d.join("\n"));Blockly.Arduino.addSetup("serial_"+b,b+".begin(9600);",!1);a=Blockly.Arduino.valueToCode(a,"TEXT",Blockly.Arduino.ORDER_NONE)||'""';return[c+"("+a+")",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_endString=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_indexOf=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_charAt=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};
Blockly.Arduino.text_getSubstring=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_changeCase=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.text_prompt=function(a){return["",Blockly.Arduino.ORDER_UNARY_POSTFIX]};Blockly.Arduino.time={};Blockly.Arduino.time_delay=function(a){return"delay("+(Blockly.Arduino.valueToCode(a,"DELAY_TIME_MILI",Blockly.Arduino.ORDER_ATOMIC)||"0")+");\n"};Blockly.Arduino.time_delaymicros=function(a){return"delayMicroseconds("+(Blockly.Arduino.valueToCode(a,"DELAY_TIME_MICRO",Blockly.Arduino.ORDER_ATOMIC)||"0")+");\n"};Blockly.Arduino.time_millis=function(a){return["millis()",Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.time_micros=function(a){return["micros()",Blockly.Arduino.ORDER_ATOMIC]};
Blockly.Arduino.infinite_loop=function(a){return"while(true);\n"};Blockly.Arduino.tone={};Blockly.Arduino.io_tone=function(a){var b=a.getFieldValue("TONEPIN"),c=Blockly.Arduino.valueToCode(a,"FREQUENCY",Blockly.Arduino.ORDER_ATOMIC);Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Tone Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);\n",!1);return"tone("+b+","+c+");\n"};
Blockly.Arduino.io_notone=function(a){var b=a.getFieldValue("TONEPIN");Blockly.Arduino.reservePin(a,b,Blockly.Arduino.PinTypes.OUTPUT,"Tone Pin");Blockly.Arduino.addSetup("io_"+b,"pinMode("+b+", OUTPUT);\n",!1);return"noTone("+b+");\n"};Blockly.Arduino.variables={};Blockly.Arduino.variables_get=function(a){return[Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Arduino.ORDER_ATOMIC]};Blockly.Arduino.variables_set=function(a){var b=Blockly.Arduino.valueToCode(a,"VALUE",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return Blockly.Arduino.variableDB_.getName(a.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE)+" = "+b+";\n"};
Blockly.Arduino.variables_set_type=function(a){var b=Blockly.Arduino.valueToCode(a,"VARIABLE_SETTYPE_INPUT",Blockly.Arduino.ORDER_ASSIGNMENT)||"0";return["("+Blockly.Arduino.getArduinoType_(Blockly.Types[a.getFieldValue("VARIABLE_SETTYPE_TYPE")])+")("+b+")",Blockly.Arduino.ORDER_ATOMIC]};